"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateliminal_app"]("main",{

/***/ "./src/modules/kyc.ts":
/*!****************************!*\
  !*** ./src/modules/kyc.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AlpacaId\": () => (/* binding */ AlpacaId),\n/* harmony export */   \"IsValidKYC\": () => (/* binding */ IsValidKYC),\n/* harmony export */   \"KYCUserIsValid\": () => (/* binding */ KYCUserIsValid),\n/* harmony export */   \"KYCUserToSmartContract\": () => (/* binding */ KYCUserToSmartContract),\n/* harmony export */   \"initKYC\": () => (/* binding */ initKYC)\n/* harmony export */ });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../main */ \"./src/main.ts\");\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render */ \"./src/modules/render.ts\");\n/* harmony import */ var _buy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./buy */ \"./src/modules/buy.ts\");\n/* harmony import */ var moralis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moralis */ \"./node_modules/moralis/index.js\");\n/* harmony import */ var moralis__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moralis__WEBPACK_IMPORTED_MODULE_3__);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nlet AlpacaId;\r\nlet KYCInfo = getKYCInfo();\r\nconst initKYC = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        AlpacaId = (yield moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current().fetch()).get('alpacaId');\r\n        AlpacaId = undefined;\r\n        console.log('alpacaId:', AlpacaId);\r\n        if (!AlpacaId) {\r\n            document.getElementById('kyc_reg').style.display = 'block';\r\n            document.getElementById('writeToBlockcahin').style.display = 'none';\r\n            document.getElementById('submitKYC').onclick = submitKYC;\r\n            loadName();\r\n        }\r\n        else {\r\n            showWriteToBlockchain();\r\n        }\r\n    });\r\n};\r\nconst loadName = function () {\r\n    var characters = [\r\n        { given_name: 'Leslie', family_name: 'Knope', email_address: 'leslie.knope' },\r\n        { given_name: 'April', family_name: 'Ludgate', email_address: 'april.ludgate' },\r\n        { given_name: 'Jerry', family_name: 'Gergich', email_address: 'jerry.gergich' },\r\n        { given_name: 'Tom', family_name: 'Haverford', email_address: 'tom.haverford' },\r\n        { given_name: 'Donna', family_name: 'Meagle', email_address: 'donna.meagle' },\r\n        { given_name: 'Andy', family_name: 'Dwyer', email_address: 'andy.dwyer' },\r\n        { given_name: 'Ann', family_name: 'Perkins', email_address: 'ann.perkins' },\r\n        { given_name: 'Ben', family_name: 'Wyatt', email_address: 'ben.wyatt' },\r\n        { given_name: 'Chris', family_name: 'Traeger', email_address: 'chris.traeger' },\r\n        { given_name: 'Jean-Ralphio', family_name: 'Saperstein', email_address: 'jean-ralphio.saperstein' },\r\n        { given_name: 'Councilman', family_name: 'Jamm', email_address: 'jamm' }\r\n    ];\r\n    let idx = Math.floor(Math.random() * characters.length) % characters.length;\r\n    var character = characters[idx];\r\n    document.getElementById('given_name').value = character.given_name;\r\n    document.getElementById('family_name').value = character.family_name;\r\n    document.getElementById('email_address').value = character.email_address + '.' + (new Date().getTime()) + '@parks-and-rec-example.com';\r\n};\r\nconst submitKYC = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        showProgressStep('Register KYC with broker', 33);\r\n        const form = document.getElementById('kyc_wizard_form');\r\n        let data = new FormData(form);\r\n        let params = serialize(data);\r\n        AlpacaId = yield moralis__WEBPACK_IMPORTED_MODULE_3___default().Cloud.run(\"kycRegistration\", params);\r\n        let user = moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current();\r\n        user.set('alpacaId', AlpacaId);\r\n        user.save();\r\n        KYCUserToSmartContract(AlpacaId);\r\n        return false;\r\n    });\r\n};\r\nconst showProgressStep = function (text, perc, warning) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        document.getElementById('btnWriteToBlockchain').style.display = \"none\";\r\n        document.getElementById('submitKYC').style.display = \"none\";\r\n        document.getElementById('kyc_progress').style.display = \"block\";\r\n        var element = document.getElementById('kyc_steps');\r\n        element.innerHTML = '<div class=\"progress_text\">' + text + '</div>';\r\n        element.style.width = perc + '%';\r\n        element.classList.toggle('progress-bar-striped', (perc != 100));\r\n        element.classList.toggle('progress-bar-animated', (perc != 100));\r\n        if (warning) {\r\n            element.classList.add('bg-warning');\r\n            element.classList.add('progress_text_attn');\r\n        }\r\n        else {\r\n            element.classList.remove('bg-warning');\r\n            element.classList.remove('progress_text_attn');\r\n        }\r\n    });\r\n};\r\nconst isValidAccountId = function (str) {\r\n    const regex = new RegExp('^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$');\r\n    return regex.test(str);\r\n};\r\nconst KYCUserToSmartContract = function (accountId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (!isValidAccountId(accountId)) {\r\n            showProgressStep('Your account id was invalid. This should not happen, <a href=\"https://discord.gg/ePs5cRceNB\" target=\"_blank\">ping us on Discord</a>', 100, true);\r\n            return;\r\n        }\r\n        const str = 'Writing to blockchain, you must confirm transaction in your wallet';\r\n        showProgressStep(str, 66);\r\n        setTimeout(function () { checkToShowMetamaskIcon(str); }, 10 * 1000);\r\n        const kycOptions = {\r\n            contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.KYC_ADDRESS,\r\n            functionName: \"validateAccount\",\r\n            abi: KYCInfo.abi,\r\n            params: {\r\n                accountId: accountId\r\n            },\r\n        };\r\n        yield moralis__WEBPACK_IMPORTED_MODULE_3___default().executeFunction(kycOptions).then((result) => __awaiter(this, void 0, void 0, function* () {\r\n            console.log('KYCUserToSmartContract result', result);\r\n            IsValidKYC = true;\r\n            showProgressStep('Done, loading buy page...', 100);\r\n            (0,_render__WEBPACK_IMPORTED_MODULE_1__.render)('buy', null, _buy__WEBPACK_IMPORTED_MODULE_2__.buyPageInit);\r\n        })).catch(function (err) {\r\n            console.log(err);\r\n            showWriteToBlockchain();\r\n        });\r\n        console.log('writing to blockcahin', kycOptions);\r\n    });\r\n};\r\nconst checkToShowMetamaskIcon = function (txt) {\r\n    //Waiting on approval to execute\r\n    if (document.getElementById('kyc_progress') && document.getElementById('kyc_progress').style.display != \"none\" && document.getElementById('kyc_steps').innerText.indexOf(txt) != -1) {\r\n        showProgressStep('Hey Ho! Is Metamask be waiting for you?<br />Check top right corner of your browser <img src=\"/img/metamask-pending.png\"/>', 99, true);\r\n        setTimeout(function () { blockshainSlowMessage(); }, 8 * 1000);\r\n    }\r\n};\r\nconst blockshainSlowMessage = function () {\r\n    if (document.getElementById('kyc_progress') && document.getElementById('kyc_progress').style.display != \"none\" && document.getElementById('kyc_steps').innerText.indexOf('Hey Ho!') != -1) {\r\n        showProgressStep('If you have already approved, maybe blockchain is slow. Lets give it a bit. Just double check for <img src=\"/img/metamask-pending.png\"/>', 99, true);\r\n    }\r\n};\r\nconst showWriteToBlockchain = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const user = yield moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current();\r\n        document.getElementById('need_native_token').style.display = 'block';\r\n        document.getElementById('native_token_address').value = yield user.get('ethAddress');\r\n        document.getElementById('btnWriteToBlockchain').style.display = \"block\";\r\n        document.getElementById('submitKYC').style.display = \"block\";\r\n        document.getElementById('kyc_progress').style.display = 'none';\r\n        document.getElementById('kyc_reg').style.display = 'none';\r\n        document.getElementById('writeToBlockcahin').style.display = 'block';\r\n        document.getElementById('btnWriteToBlockchain').addEventListener('click', function (evt) {\r\n            evt.preventDefault();\r\n            KYCUserToSmartContract(AlpacaId);\r\n        });\r\n    });\r\n};\r\nfunction serialize(data) {\r\n    let obj = {};\r\n    for (let [key, value] of data) {\r\n        if (obj[key] !== undefined) {\r\n            if (!Array.isArray(obj[key])) {\r\n                obj[key] = [obj[key]];\r\n            }\r\n            obj[key].push(value);\r\n        }\r\n        else {\r\n            obj[key] = value;\r\n        }\r\n    }\r\n    return obj;\r\n}\r\nlet IsValidKYC = false;\r\nconst KYCUserIsValid = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (IsValidKYC)\r\n            return true;\r\n        const kycOptions = {\r\n            contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.KYC_ADDRESS,\r\n            functionName: \"isValid\",\r\n            abi: KYCInfo.abi,\r\n            params: {\r\n                userAddress: moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current().get('ethAddress')\r\n            }\r\n        };\r\n        yield moralis__WEBPACK_IMPORTED_MODULE_3___default().executeFunction(kycOptions).then((result) => __awaiter(this, void 0, void 0, function* () {\r\n            console.log('kyc result:', result);\r\n            //todo: make sure result.value is correct\r\n            if (isValidAccountId(result.value)) {\r\n                IsValidKYC = true;\r\n                var user = moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current();\r\n                if (!user.get('alpacaId')) {\r\n                    user.save({ alpacaId: result });\r\n                    yield moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current().fetch();\r\n                }\r\n                return;\r\n            }\r\n        })).catch(function (err) {\r\n            console.log('Not KYC valid', err);\r\n        });\r\n    });\r\n};\r\nfunction getKYCInfo() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield fetch(\"../abi/KYC.json\");\r\n        return yield response.json();\r\n    });\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/kyc.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("2c00d1f625bda60c0e2f")
/******/ })();
/******/ 
/******/ }
);