"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateliminal_app"]("main",{

/***/ "./src/modules/buy.ts":
/*!****************************!*\
  !*** ./src/modules/buy.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ExecuteTradeOffHoursTxt\": () => (/* binding */ ExecuteTradeOffHoursTxt),\n/* harmony export */   \"addTokenLinkBottom\": () => (/* binding */ addTokenLinkBottom),\n/* harmony export */   \"buyPageInit\": () => (/* binding */ buyPageInit),\n/* harmony export */   \"checkTokenValueVsBuyAmount\": () => (/* binding */ checkTokenValueVsBuyAmount),\n/* harmony export */   \"getSymbolContractAddress\": () => (/* binding */ getSymbolContractAddress),\n/* harmony export */   \"hideModalSecurities\": () => (/* binding */ hideModalSecurities),\n/* harmony export */   \"selectSymbol\": () => (/* binding */ selectSymbol),\n/* harmony export */   \"setSelectedSymbolAndAddress\": () => (/* binding */ setSelectedSymbolAndAddress),\n/* harmony export */   \"setupSteps\": () => (/* binding */ setupSteps),\n/* harmony export */   \"updateBuyInfo\": () => (/* binding */ updateBuyInfo)\n/* harmony export */ });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../main */ \"./src/main.ts\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ \"./src/modules/helper.ts\");\n/* harmony import */ var _kyc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kyc */ \"./src/modules/kyc.ts\");\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./render */ \"./src/modules/render.ts\");\n/* harmony import */ var _account__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./account */ \"./src/modules/account.ts\");\n/* harmony import */ var _networks_network_info__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../networks/network-info */ \"./src/networks/network-info.ts\");\n/* harmony import */ var _market__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./market */ \"./src/modules/market.ts\");\n/* harmony import */ var _securities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./securities */ \"./src/modules/securities.ts\");\n/* harmony import */ var moralis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! moralis */ \"./node_modules/moralis/index.js\");\n/* harmony import */ var moralis__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moralis__WEBPACK_IMPORTED_MODULE_8__);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet aUsdAmount;\r\nlet assetPrice = null;\r\nlet lastTraded = null;\r\nconst ExecuteTradeOffHoursTxt = 'Execute trade <div class=\"small_print\">It will take few hours to process, market is closed<br>You can enable \"Off hours trading\" in the Menu</div>';\r\nlet SelectedSymbolAddress = null;\r\nlet Symbol = '';\r\nlet LiminalMarketInfo;\r\nlet AUSDInfo;\r\nconst buyPageInit = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        history.pushState(null, 'Buy securities', '/buy');\r\n        document.getElementById('buy_amount').addEventListener('click', function (evt) {\r\n            updateBuyInfo(Symbol);\r\n        });\r\n        setupSteps();\r\n        setupAssets();\r\n        let response = yield fetch('../abi/LiminalMarket.json');\r\n        LiminalMarketInfo = yield response.json();\r\n        response = yield fetch('../abi/aUSD.json');\r\n        AUSDInfo = yield response.json();\r\n    });\r\n};\r\nconst selectSymbol = function (symbol, name, logo, address) {\r\n    buyPageInit();\r\n    if (!moralis__WEBPACK_IMPORTED_MODULE_8___default().Web3.isWeb3Enabled())\r\n        return;\r\n    setSelectedSymbolAndAddress(symbol, address);\r\n    let selectSymbolBtn = document.getElementById('select-symbol');\r\n    selectSymbolBtn.innerHTML = name + ' (' + symbol + ')';\r\n    updateBuyInfo(symbol, name, logo);\r\n};\r\nconst setupSteps = function (showNetwork) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        document.querySelectorAll('.step').forEach((value, key) => {\r\n            value.style.display = 'none';\r\n        });\r\n        const isMetaMaskInstalled = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().isMetaMaskInstalled();\r\n        if (!isMetaMaskInstalled) {\r\n            document.getElementById('install_metamask').style.display = 'block';\r\n            return;\r\n        }\r\n        yield moralis__WEBPACK_IMPORTED_MODULE_8___default().enableWeb3().then(function (response) {\r\n            console.log('response', response);\r\n        }).catch(function (reason) {\r\n            console.log('faile to enable', reason);\r\n            document.getElementById('connect_wallet').style.display = 'block';\r\n            //user has not connected the wallet\r\n            document.getElementById('click_to_connect_wallet').addEventListener('click', function (evt) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    evt.preventDefault();\r\n                    yield moralis__WEBPACK_IMPORTED_MODULE_8___default().enableWeb3();\r\n                    setupSteps();\r\n                });\r\n            });\r\n            return;\r\n        }).finally(function () {\r\n            console.log('finally');\r\n        });\r\n        console.log('moralis chain:', (moralis__WEBPACK_IMPORTED_MODULE_8___default().chainId));\r\n        const chainId = parseInt(yield (moralis__WEBPACK_IMPORTED_MODULE_8___default().chainId), 16);\r\n        ;\r\n        let networkInfo = (0,_networks_network_info__WEBPACK_IMPORTED_MODULE_5__.tryGetNetwork)(chainId);\r\n        if (networkInfo) {\r\n            _main__WEBPACK_IMPORTED_MODULE_0__.Main.NetworkInfo.setNetwork(networkInfo);\r\n        }\r\n        console.log('chains:', chainId, networkInfo.ChainId);\r\n        if (networkInfo.ChainId != chainId || showNetwork) {\r\n            document.getElementById('select_network').style.display = 'block';\r\n            if (window.location.href.indexOf('127.') != -1) {\r\n                document.getElementById('network_localhost').style.display = 'block';\r\n            }\r\n            const options = document.querySelectorAll('.network_chooser');\r\n            for (let i = 0; i < options.length; i++) {\r\n                options[i].addEventListener('click', function (evt) {\r\n                    return __awaiter(this, void 0, void 0, function* () {\r\n                        evt.preventDefault();\r\n                        console.log('chain id:', evt.target.dataset.chainid);\r\n                        try {\r\n                            const chainIdHex = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().switchNetwork(evt.target.dataset.chainid)\r\n                                .then(function () {\r\n                                return __awaiter(this, void 0, void 0, function* () {\r\n                                    yield moralis__WEBPACK_IMPORTED_MODULE_8___default().User.logOut();\r\n                                    window.location.reload();\r\n                                });\r\n                            }).catch(function (err) {\r\n                                addNetworkToWallet(parseInt(evt.target.dataset.chainid));\r\n                                console.log(err);\r\n                            });\r\n                        }\r\n                        catch (e) {\r\n                            console.log(e);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            return;\r\n        }\r\n        let user = moralis__WEBPACK_IMPORTED_MODULE_8___default().User.current();\r\n        console.log('user', user);\r\n        if (user == null) {\r\n            //user is not logged in, lets log you in\r\n            document.getElementById('login_user').style.display = 'block';\r\n            document.getElementById('click_to_login_user').addEventListener('click', function (evt) {\r\n                evt.preventDefault();\r\n                (0,_account__WEBPACK_IMPORTED_MODULE_4__.login)(function () {\r\n                    setupSteps();\r\n                });\r\n                /*Moralis.authenticate().then(function (user) {\r\n                    setupSteps();\r\n                }).catch(function(err) {\r\n                    document.getElementById('login_user_error').style.display = 'block';\r\n                })*/\r\n            });\r\n            return;\r\n        }\r\n        yield (0,_kyc__WEBPACK_IMPORTED_MODULE_2__.KYCUserIsValid)();\r\n        console.log('IsValidKYC:', _kyc__WEBPACK_IMPORTED_MODULE_2__.IsValidKYC);\r\n        if (!_kyc__WEBPACK_IMPORTED_MODULE_2__.IsValidKYC) {\r\n            //user needs to do kyc\r\n            document.getElementById('kyc_registration').style.display = 'block';\r\n            document.getElementById('click_to_kyc_reg').addEventListener('click', function (evt) {\r\n                evt.preventDefault();\r\n                (0,_render__WEBPACK_IMPORTED_MODULE_3__.render)('kyc', null, _kyc__WEBPACK_IMPORTED_MODULE_2__.initKYC);\r\n            });\r\n            return;\r\n        }\r\n        checkBalanceOfAUsd();\r\n        if (aUsdAmount < 1) {\r\n            //show funding step\r\n            document.getElementById('fund_account').style.display = 'block';\r\n            document.getElementById('account_not_ready').style.display = \"none\";\r\n            document.getElementById('add_ausd_to_wallet').addEventListener('click', function (evt) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    evt.preventDefault();\r\n                    yield (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addTokenToWallet)(_main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.AUSD_ADDRESS, 'aUSD');\r\n                });\r\n            });\r\n            document.getElementById('fundUSDC').addEventListener('click', function (evt) {\r\n                evt.preventDefault();\r\n                //fund usdc\r\n                //transferUSDC();\r\n            });\r\n            document.getElementById('fundAUSD').addEventListener('click', function (evt) {\r\n                evt.preventDefault();\r\n                // fund ausd, moralis\r\n                fundUser();\r\n            });\r\n            return;\r\n        }\r\n        //lets buy securities\r\n    });\r\n};\r\nconst addNetworkToWallet = function (chainId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let networkInfo = (0,_networks_network_info__WEBPACK_IMPORTED_MODULE_5__.tryGetNetwork)(chainId);\r\n        const web3 = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().enableWeb3();\r\n        web3.provider.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{\r\n                    chainId: chainId,\r\n                    chainName: networkInfo.ChainName,\r\n                    nativeCurrency: {\r\n                        name: networkInfo.NativeCurrencyName,\r\n                        symbol: networkInfo.NativeSymbol,\r\n                        decimals: networkInfo.NativeDecimal\r\n                    },\r\n                    rpcUrls: [networkInfo.RpcUrl],\r\n                    blockExplorerUrls: [networkInfo.BlockExplorer]\r\n                }]\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    });\r\n};\r\nconst fundUser = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const params = {\r\n            chainId: _main__WEBPACK_IMPORTED_MODULE_0__.Main.NetworkInfo.ChainId\r\n        };\r\n        document.getElementById('account_not_ready').style.display = \"none\";\r\n        moralis__WEBPACK_IMPORTED_MODULE_8___default().Cloud.run('fundUser', params).then(function (response) {\r\n            showWaitingForFunding();\r\n            return;\r\n        }).catch(function (err) {\r\n            document.getElementById('account_not_ready').style.display = \"block\";\r\n        });\r\n    });\r\n};\r\nconst checkNativeTokenStatus = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const options = { chain: _main__WEBPACK_IMPORTED_MODULE_0__.Main.NetworkInfo.Name };\r\n        const result = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().Web3API.account.getNativeBalance(options);\r\n        //0.002998\r\n        const balance = parseFloat(moralis__WEBPACK_IMPORTED_MODULE_8___default().Units.FromWei(result.balance, 18));\r\n        if (SelectedSymbolAddress == _helper__WEBPACK_IMPORTED_MODULE_1__.AddressZero && balance < 0.005) {\r\n            showNeedNativeToken();\r\n        }\r\n        else if (balance < 0.0007) {\r\n            showNeedNativeToken();\r\n        }\r\n        else {\r\n            document.getElementById('need_native_token').style.display = 'none';\r\n        }\r\n    });\r\n};\r\nconst showNeedNativeToken = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const user = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().User.current();\r\n        document.getElementById('need_native_token').style.display = 'block';\r\n        document.getElementById('native_token_address').value = yield user.get('ethAddress');\r\n        setTimeout(checkNativeTokenStatus, 20 * 1000);\r\n    });\r\n};\r\nconst setupBuyButton = function () {\r\n    document.getElementById('execute-trade').classList.remove('disabled');\r\n    document.getElementById('execute-trade').classList.add('enabled');\r\n    if (_kyc__WEBPACK_IMPORTED_MODULE_2__.IsValidKYC) {\r\n        document.getElementById('execute-trade').onclick = transfer;\r\n    }\r\n    else {\r\n        const user = moralis__WEBPACK_IMPORTED_MODULE_8___default().User.current();\r\n        if (!user) {\r\n            document.getElementById('execute-trade').innerText = \"Login using Metamask\";\r\n            document.getElementById('execute-trade').onclick = function () {\r\n                (0,_account__WEBPACK_IMPORTED_MODULE_4__.login)(setupBuyButton);\r\n            };\r\n        }\r\n        else {\r\n            document.getElementById('execute-trade').innerText = 'You need to do (fake) KYC before buying';\r\n            document.getElementById('execute-trade').onclick = function () {\r\n                (0,_render__WEBPACK_IMPORTED_MODULE_3__.render)('kyc', null, _kyc__WEBPACK_IMPORTED_MODULE_2__.initKYC);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst showWaitingForFunding = function () {\r\n    document.getElementById('waiting_for_funding').style.display = 'block';\r\n    document.getElementById('buy_securities_wrapper').style.display = 'block';\r\n    document.getElementById('fund_account').style.display = 'none';\r\n    document.getElementById('buy_headline').innerHTML = \"Let's play... 🚀🚀🚀\";\r\n    let text = \"You currently have <strong>$\" + (0,_helper__WEBPACK_IMPORTED_MODULE_1__.roundNumber)(aUsdAmount) + \" aUSD</strong>.\"\r\n        + \" Lets try it anyway. Type in any amount in the box below and select a symbol.\"\r\n        + \" You will see how many shares you will get for that amount\";\r\n    document.getElementById('buy_text').innerHTML = text;\r\n    checkBalanceOfAUsd();\r\n};\r\nconst checkBalanceOfAUsd = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        aUsdAmount = yield getAUSDAmount();\r\n        if (aUsdAmount >= 1) {\r\n            document.getElementById('waiting_for_funding').style.display = 'none';\r\n            document.getElementById('buy_headline').innerHTML = \"Let's buy something!\";\r\n            let text = \"You currently have <strong>$\" + (0,_helper__WEBPACK_IMPORTED_MODULE_1__.roundNumber)(aUsdAmount) + \" aUSD.</strong>\"\r\n                + \" You can now buy your own securities.\";\r\n            document.getElementById('buy_text').innerHTML = text;\r\n            updateBuyInfo(Symbol);\r\n            showUseWalletForOrders();\r\n        }\r\n        else {\r\n            setTimeout(yield checkBalanceOfAUsd, 30 * 1000);\r\n        }\r\n    });\r\n};\r\nconst showUseWalletForOrders = function () {\r\n    document.getElementById('create-order').classList.add('sidebar');\r\n    document.getElementById('use_wallet_for_orders').style.display = 'inline-block';\r\n    document.getElementById('buy_securities_wrapper').style.display = 'inline-block';\r\n};\r\nconst getAUSDAmount = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const user = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().User.current();\r\n        if (!user)\r\n            return 0;\r\n        const ethAddress = yield user.get('ethAddress');\r\n        const ausdcOptions = {\r\n            contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.AUSD_ADDRESS,\r\n            functionName: \"balanceOf\",\r\n            abi: AUSDInfo.abi,\r\n            params: {\r\n                account: ethAddress\r\n            }\r\n        };\r\n        let amount = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().executeFunction(ausdcOptions).then(balanceOf => {\r\n            console.log('balanceOf obj:', balanceOf);\r\n            let amount = moralis__WEBPACK_IMPORTED_MODULE_8___default().Units.FromWei(balanceOf, 18);\r\n            document.getElementById('add_ausd_to_wallet_menu').innerHTML = 'You have ' + (0,_helper__WEBPACK_IMPORTED_MODULE_1__.roundNumber)(parseFloat(amount)) + ' aUSD in your broker account';\r\n            return amount;\r\n        }).catch(function (err) {\r\n            console.error(err);\r\n        });\r\n        return amount;\r\n    });\r\n};\r\nconst setupAssets = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        document.getElementById('select-symbol').addEventListener('click', function (evt) {\r\n            loadSecuritiesModal(evt);\r\n        });\r\n        document.getElementById('buy_amount').onchange = function () {\r\n            updateBuyInfo(Symbol);\r\n        };\r\n        document.getElementById('findSymbol').addEventListener('click', function (evt) {\r\n            loadSecuritiesModal(evt);\r\n        });\r\n    });\r\n};\r\nconst loadSecuritiesModal = function (evt) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        evt.preventDefault();\r\n        document.getElementById('modalSecurities').style.display = 'block';\r\n        document.getElementById('backdrop').style.display = 'block';\r\n        document.getElementById('modalSecurities').addEventListener('click', function (evt) {\r\n            console.log(evt.target.id);\r\n            if (evt.target.id == 'modalSecurities' || evt.target.id == 'closeModal') {\r\n                hideModalSecurities();\r\n            }\r\n        });\r\n        (0,_render__WEBPACK_IMPORTED_MODULE_3__.render)('securities', null, function () { (0,_securities__WEBPACK_IMPORTED_MODULE_7__.loadSecurities)(true); }, 'modal-body');\r\n    });\r\n};\r\nconst hideModalSecurities = function () {\r\n    document.getElementById('modalSecurities').style.display = 'none';\r\n    document.getElementById('backdrop').style.display = 'none';\r\n};\r\nconst getSymbolPrice = function (evt) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (evt) {\r\n            evt.preventDefault();\r\n        }\r\n        if (Symbol === '') {\r\n            assetPrice = 0;\r\n            lastTraded = '';\r\n            return;\r\n        }\r\n        offHoursInfo();\r\n        SelectedSymbolAddress = yield getSymbolContractAddress(Symbol);\r\n        console.log('contractAddresss:', SelectedSymbolAddress);\r\n        if (SelectedSymbolAddress == _helper__WEBPACK_IMPORTED_MODULE_1__.AddressZero) {\r\n            document.getElementById('execute-trade').innerHTML = \"Create token & execute trade\";\r\n            //TODO for sandbox lets not show this, but for live we need to show.\r\n            //document.getElementById('add-token-info').style.display='block';\r\n            //document.getElementById('add-token-info').innerHTML = \"<div >We will need to create the token when you buy it. Since you are the first one to buy this symbol, this will incure extra cost. It's a low cost</div>\";\r\n        }\r\n        else {\r\n            document.getElementById('execute-trade').innerHTML = \"Execute trade\";\r\n            addTokenLink(Symbol, SelectedSymbolAddress);\r\n        }\r\n        yield loadAssetPrice();\r\n        updateBuyInfo(Symbol);\r\n    });\r\n};\r\nconst loadAssetPrice = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const params = {\r\n            symbol: Symbol\r\n        };\r\n        return yield moralis__WEBPACK_IMPORTED_MODULE_8___default().Cloud.run(\"getSymbolPrice\", params).then(function (jsonResult) {\r\n            assetPrice = jsonResult.trade.p;\r\n            lastTraded = jsonResult.trade.t;\r\n        });\r\n    });\r\n};\r\nconst getSymbolContractAddress = function (symbol) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const securityTokenOptions = {\r\n            contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.LIMINAL_MARKET_ADDRESS,\r\n            functionName: \"getSecurityToken\",\r\n            abi: LiminalMarketInfo.abi,\r\n            params: {\r\n                symbol: symbol\r\n            }\r\n        };\r\n        return yield moralis__WEBPACK_IMPORTED_MODULE_8___default().executeFunction(securityTokenOptions);\r\n    });\r\n};\r\nconst offHoursInfo = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        yield (0,_market__WEBPACK_IMPORTED_MODULE_6__.isMarketOpen)();\r\n        if (!_market__WEBPACK_IMPORTED_MODULE_6__.IsMarketOpen && !_market__WEBPACK_IMPORTED_MODULE_6__.UserIsOffHours) {\r\n            document.getElementById('offHoursInfo').style.display = 'block';\r\n            document.getElementById('execute-trade').innerHTML = ExecuteTradeOffHoursTxt;\r\n        }\r\n        else {\r\n            document.getElementById('offHoursInfo').style.display = 'none';\r\n            document.getElementById('execute-trade').innerHTML = 'Execute trade';\r\n        }\r\n    });\r\n};\r\nconst addTokenLink = function (symbol, contractAddress) {\r\n    document.getElementById('add-token-info').style.display = 'none';\r\n};\r\nconst addTokenLinkBottom = function (symbol, contractAddress) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const asset = yield (0,_helper__WEBPACK_IMPORTED_MODULE_1__.getAssetBySymbol)(symbol);\r\n        document.getElementById('addNewTokenToWallet').style.display = 'block';\r\n        document.getElementById('tokenLogo').src = '/img/logos/' + asset.Logo;\r\n        document.getElementById('addNewTokenText').innerHTML = 'Add ' + symbol + ' to your wallet.';\r\n        document.getElementById('addNewToken').onclick = function (evt) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                evt.preventDefault();\r\n                yield (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addTokenToWallet)(contractAddress, symbol);\r\n            });\r\n        };\r\n    });\r\n};\r\nconst updateBuyInfo = function (symbol, name, logo) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (!symbol)\r\n            return;\r\n        let buyAmount = document.getElementById('buy_amount').value;\r\n        if (buyAmount === '' || assetPrice == null)\r\n            return;\r\n        document.getElementById('buy_success_message').style.display = 'none';\r\n        let str = 'Estimated you will buy ' + (0,_helper__WEBPACK_IMPORTED_MODULE_1__.roundNumber)(parseFloat(buyAmount) / assetPrice) + ' shares at the price of $' + assetPrice + ' per share. ';\r\n        str += 'Last trade was ' + (new Date(lastTraded)).toLocaleString();\r\n        if (SelectedSymbolAddress == _helper__WEBPACK_IMPORTED_MODULE_1__.AddressZero) {\r\n            str += '<br /><span class=\"small_print\">Since you are the first one to buy ' + symbol + \" you will be asked to create the token first, then we'll execute the trade</span>\";\r\n        }\r\n        document.getElementById('buy-info').innerHTML = str;\r\n        document.getElementById('buy-info').style.display = 'block';\r\n        checkTokenValueVsBuyAmount();\r\n    });\r\n};\r\nconst checkTokenValueVsBuyAmount = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        document.getElementById('buy_danger_message').style.display = 'none';\r\n        let buyAmount = document.getElementById('buy_amount').value;\r\n        var user = moralis__WEBPACK_IMPORTED_MODULE_8___default().User.current();\r\n        if (!user) {\r\n            document.getElementById('buy_danger_message').style.display = 'block';\r\n            let str = 'You are not logged in. Login in the menu at top.';\r\n            document.getElementById('buy_danger_message').innerHTML = str;\r\n            return false;\r\n        }\r\n        document.getElementById('execute-trade').classList.add('disabled');\r\n        document.getElementById('execute-trade').classList.remove('enabled');\r\n        if (aUsdAmount < buyAmount) {\r\n            document.getElementById('buy_danger_message').style.display = 'block';\r\n            document.getElementById('buy_danger_message').innerHTML = \"You don't have enough aUSD tokens in your wallet.\";\r\n            return false;\r\n        }\r\n        checkNativeTokenStatus();\r\n        yield setupBuyButton();\r\n    });\r\n};\r\nconst showProgressStep = function (text, perc, warning) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        document.getElementById('buy_progress').style.display = \"block\";\r\n        var element = document.getElementById('buying_steps');\r\n        element.innerHTML = '<div class=\"progress_text\">' + text + '</div>';\r\n        element.style.width = perc + '%';\r\n        element.classList.toggle('progress-bar-striped', (perc != 100));\r\n        element.classList.toggle('progress-bar-animated', (perc != 100));\r\n        if (warning) {\r\n            element.classList.add('bg-warning');\r\n            element.classList.add('progress_text_attn');\r\n        }\r\n        else {\r\n            element.classList.remove('bg-warning');\r\n            element.classList.remove('progress_text_attn');\r\n        }\r\n    });\r\n};\r\nconst hideProcessStep = function () {\r\n    document.getElementById('buy_progress').style.display = \"none\";\r\n    document.getElementById('execute-trade').style.display = 'block';\r\n};\r\nconst transfer = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const buyAmount = document.getElementById('buy_amount').value;\r\n        if (Symbol === '' || buyAmount === '')\r\n            return;\r\n        if (!checkTokenValueVsBuyAmount())\r\n            return false;\r\n        document.getElementById('execute-trade').style.display = 'none';\r\n        if (SelectedSymbolAddress == null) {\r\n            SelectedSymbolAddress = yield getSymbolContractAddress(Symbol);\r\n        }\r\n        if (SelectedSymbolAddress == _helper__WEBPACK_IMPORTED_MODULE_1__.AddressZero) {\r\n            showProgressStep('First we need to create token, you need to confirm', 99);\r\n            setTimeout(function () { checkToShowMetamaskIcon('First we need'); }, (10 * 1000));\r\n            let txResult = yield executeCreateToken(Symbol).catch(function (err) {\r\n                hideProcessStep();\r\n                return null;\r\n            });\r\n            if (txResult == null)\r\n                return;\r\n            console.log(txResult);\r\n            if (txResult.events.TokenCreated) {\r\n                SelectedSymbolAddress = txResult.events.TokenCreated.returnValues.tokenAddress;\r\n            }\r\n        }\r\n        console.log('recipent', SelectedSymbolAddress);\r\n        if (SelectedSymbolAddress == _helper__WEBPACK_IMPORTED_MODULE_1__.AddressZero)\r\n            return;\r\n        document.getElementById('execute-trade').innerHTML = \"Execute trade\";\r\n        let waitingStr = 'Waiting on approval to execute to buy ';\r\n        showProgressStep(waitingStr + Symbol + ' for $' + buyAmount + '.', 99);\r\n        setTimeout(function () { checkToShowMetamaskIcon(waitingStr); }, 10 * 1000);\r\n        yield subscribeToTable();\r\n        var buyResult = yield executeBuy(SelectedSymbolAddress, parseFloat(buyAmount));\r\n        if (buyResult == null) {\r\n            hideProcessStep();\r\n            return;\r\n        }\r\n        console.log('buyResult', buyResult);\r\n        document.getElementById('add-token-info').style.display = 'none';\r\n    });\r\n};\r\nconst subscribeToTable = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        console.log('subscribe to table:' + getOrderBuyTablePrefix() + 'OrderBuy');\r\n        let query = new (moralis__WEBPACK_IMPORTED_MODULE_8___default().Query)(getOrderBuyTablePrefix() + 'OrderBuy');\r\n        let subscription = yield query.subscribe();\r\n        subscription.on('update', (response) => {\r\n            const object = response.toJSON();\r\n            console.log('object updated', JSON.stringify(object), object);\r\n            let ethLink = ' <a class=\"white-link\" target=\"_blank\" href=\"https://rinkeby.etherscan.io/tx/' + object.transaction_hash + '\">View transaction</a>';\r\n            console.log('status:', object.status);\r\n            if (object.tokenAddress) {\r\n                addTokenLinkBottom(Symbol, SelectedSymbolAddress);\r\n            }\r\n            if ((!object.status && object.confirmed) || object.status == 'money_sent') {\r\n                showProgressStep('Blockchain has confirmed, money has been sent to broker.' + ethLink, 56);\r\n                //blockchain has confirmed, money will arrive soon to broker\r\n            }\r\n            else if (object.status == 'money_arrived') {\r\n                showProgressStep('Money has arrived, will now execute your buy order.' + ethLink, 70);\r\n                //money has arrived to broker, we will now execute your order\r\n            }\r\n            else if (object.status == 'order_requested') {\r\n                //order has been executed, we are waiting on response from the stock exchange\r\n                showProgressStep('Buy order has been executed. We will update you when it has been filled.' + ethLink, 84);\r\n            }\r\n            else if (object.status == 'order_filled') {\r\n                document.getElementById('buy-info').style.display = 'none';\r\n                //order has been filled, you got object.filledQty of shares. You will see it soon in your wallet\r\n                showProgressStep('Order has been filled, you will recieve ' + object.filledQty + ' ' + Symbol + ' soon into your wallet.' + ethLink, 100);\r\n            }\r\n            else {\r\n                showProgressStep('Waiting for blockchain to confirm transaction.', 99);\r\n            }\r\n        });\r\n    });\r\n};\r\nconst getOrderBuyTablePrefix = function () {\r\n    if (_main__WEBPACK_IMPORTED_MODULE_0__.Main.NetworkInfo.ChainId == 43113)\r\n        return \"Fuji\";\r\n    return \"\";\r\n};\r\nconst checkToShowMetamaskIcon = function (txt) {\r\n    //Waiting on approval to execute\r\n    if (document.getElementById('buy_progress').style.display != \"none\" && document.getElementById('buying_steps').innerText.indexOf(txt) != -1) {\r\n        showProgressStep('Hey Ho! Is Metamask be waiting for you?<br />Check top right corner of your browser <img src=\"/img/metamask-pending.png\"/>', 99, true);\r\n    }\r\n    setTimeout(function () { blockshainSlowMessage(); }, 8 * 1000);\r\n};\r\nconst blockshainSlowMessage = function () {\r\n    if (document.getElementById('buy_progress').style.display != \"none\" && document.getElementById('buying_steps').innerText.indexOf('Hey Ho!') != -1) {\r\n        showProgressStep('If you have already approved, maybe blockchain is slow. Lets give it a bit. Just double check for <img src=\"/img/metamask-pending.png\"/>', 99, true);\r\n    }\r\n};\r\nconst executeBuy = function (recipient, buyAmount) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const liminalOptions = {\r\n                contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.AUSD_ADDRESS,\r\n                functionName: \"transfer\",\r\n                abi: AUSDInfo.abi,\r\n                params: {\r\n                    recipient: recipient,\r\n                    amount: moralis__WEBPACK_IMPORTED_MODULE_8___default().Units.Token(buyAmount, 18)\r\n                },\r\n            };\r\n            return yield moralis__WEBPACK_IMPORTED_MODULE_8___default().executeFunction(liminalOptions);\r\n        }\r\n        catch (ex) {\r\n            console.log(ex);\r\n            return null;\r\n        }\r\n    });\r\n};\r\nconst executeCreateToken = function (symbol) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const liminalOptions = {\r\n            contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.LIMINAL_MARKET_ADDRESS,\r\n            functionName: \"createToken\",\r\n            abi: LiminalMarketInfo.abi,\r\n            params: {\r\n                symbol: symbol\r\n            },\r\n        };\r\n        return yield moralis__WEBPACK_IMPORTED_MODULE_8___default().executeFunction(liminalOptions);\r\n    });\r\n};\r\nconst setSelectedSymbolAndAddress = function (symbol, address) {\r\n    SelectedSymbolAddress = address;\r\n    Symbol = symbol;\r\n    getSymbolPrice();\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUMsQ0FBQztBQUdGLE1BQU0sVUFBVSxHQUFHLFVBQWUsU0FBa0IsRUFBRSxTQUFrQjs7UUFDdkUsSUFBSTtZQUNILE1BQU0sY0FBYyxHQUFHO2dCQUN0QixlQUFlLEVBQUUsMEVBQXVDO2dCQUN4RCxZQUFZLEVBQUUsVUFBVTtnQkFDeEIsR0FBRyxFQUFFLFFBQVEsQ0FBQyxHQUFHO2dCQUNqQixNQUFNLEVBQUU7b0JBQ1AsU0FBUyxFQUFFLFNBQVM7b0JBQ3BCLE1BQU0sRUFBRSwwREFBbUIsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDO2lCQUMxQzthQUNELENBQUM7WUFFRixPQUFPLE1BQU0sOERBQXVCLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDckQ7UUFBQyxPQUFPLEVBQUUsRUFBRTtZQUNaLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDaEIsT0FBTyxJQUFJLENBQUM7U0FDWjtJQUNGLENBQUM7Q0FBQSxDQUFDO0FBRUYsTUFBTSxrQkFBa0IsR0FBRyxVQUFlLE1BQWU7O1FBRXhELE1BQU0sY0FBYyxHQUFHO1lBQ3RCLGVBQWUsRUFBRSxvRkFBaUQ7WUFDbEUsWUFBWSxFQUFFLGFBQWE7WUFDM0IsR0FBRyxFQUFFLGlCQUFpQixDQUFDLEdBQUc7WUFDMUIsTUFBTSxFQUFFO2dCQUNQLE1BQU0sRUFBRSxNQUFNO2FBQ2Q7U0FDRCxDQUFDO1FBRUYsT0FBTyxNQUFNLDhEQUF1QixDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBRXRELENBQUM7Q0FBQSxDQUFDO0FBRUssTUFBTSwyQkFBMkIsR0FBRyxVQUFTLE1BQWUsRUFBRSxPQUFnQjtJQUNwRixxQkFBcUIsR0FBRyxPQUFPLENBQUM7SUFDaEMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUVoQixjQUFjLEVBQUUsQ0FBQztBQUNsQixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saW1pbmFsLWFwcC8uL3NyYy9tb2R1bGVzL2J1eS50cz81NDljIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1haW4gfSAgZnJvbSAnLi4vbWFpbic7XHJcblxyXG5pbXBvcnQge1xyXG5cdGFkZFRva2VuVG9XYWxsZXQsXHJcblx0cm91bmROdW1iZXIsIGdldEFzc2V0QnlTeW1ib2wsIEFkZHJlc3NaZXJvXHJcbn0gZnJvbSAnLi9oZWxwZXInO1xyXG5pbXBvcnQge1xyXG5cdElzVmFsaWRLWUMsXHJcblx0aW5pdEtZQywgS1lDVXNlcklzVmFsaWRcclxufSBmcm9tICcuL2t5Yyc7XHJcbmltcG9ydCB7XHJcblx0cmVuZGVyXHJcbn0gZnJvbSAnLi9yZW5kZXInO1xyXG5pbXBvcnQge1xyXG5cdGxvZ2luXHJcbn0gZnJvbSAnLi9hY2NvdW50JztcclxuaW1wb3J0IHt0cnlHZXROZXR3b3JrfSBmcm9tICcuLi9uZXR3b3Jrcy9uZXR3b3JrLWluZm8nO1xyXG5pbXBvcnQge0lzTWFya2V0T3BlbiwgVXNlcklzT2ZmSG91cnMsIGlzTWFya2V0T3Blbn0gZnJvbSAnLi9tYXJrZXQnO1xyXG5pbXBvcnQge2xvYWRTZWN1cml0aWVzfSBmcm9tICcuL3NlY3VyaXRpZXMnO1xyXG5pbXBvcnQgTW9yYWxpcyBmcm9tICdtb3JhbGlzJztcclxuaW1wb3J0IEJpZ051bWJlciBmcm9tICdiaWdudW1iZXInO1xyXG5cclxubGV0IGFVc2RBbW91bnQ7XHJcbmxldCBhc3NldFByaWNlID0gbnVsbDtcclxubGV0IGxhc3RUcmFkZWQgPSBudWxsO1xyXG5cclxuZXhwb3J0IGNvbnN0IEV4ZWN1dGVUcmFkZU9mZkhvdXJzVHh0ID0gJ0V4ZWN1dGUgdHJhZGUgPGRpdiBjbGFzcz1cInNtYWxsX3ByaW50XCI+SXQgd2lsbCB0YWtlIGZldyBob3VycyB0byBwcm9jZXNzLCBtYXJrZXQgaXMgY2xvc2VkPGJyPllvdSBjYW4gZW5hYmxlIFwiT2ZmIGhvdXJzIHRyYWRpbmdcIiBpbiB0aGUgTWVudTwvZGl2Pic7XHJcbmxldCBTZWxlY3RlZFN5bWJvbEFkZHJlc3MgPSBudWxsO1xyXG5sZXQgU3ltYm9sID0gJyc7XHJcbmxldCBMaW1pbmFsTWFya2V0SW5mbztcclxubGV0IEFVU0RJbmZvO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJ1eVBhZ2VJbml0ID0gYXN5bmMgZnVuY3Rpb24gKCkge1xyXG5cdGhpc3RvcnkucHVzaFN0YXRlKG51bGwsICdCdXkgc2VjdXJpdGllcycsICcvYnV5Jyk7XHJcblxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXlfYW1vdW50JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldnQpIHtcclxuXHRcdHVwZGF0ZUJ1eUluZm8oU3ltYm9sKTtcclxuXHR9KTtcclxuXHJcblx0c2V0dXBTdGVwcygpO1xyXG5cdHNldHVwQXNzZXRzKCk7XHJcblxyXG5cdGxldCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcuLi9hYmkvTGltaW5hbE1hcmtldC5qc29uJyk7XHJcbiAgICBMaW1pbmFsTWFya2V0SW5mbyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuXHJcblx0cmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnLi4vYWJpL2FVU0QuanNvbicpO1xyXG4gICAgQVVTREluZm8gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgc2VsZWN0U3ltYm9sID0gZnVuY3Rpb24oc3ltYm9sLCBuYW1lLCBsb2dvLCBhZGRyZXNzKSB7XHJcblx0YnV5UGFnZUluaXQoKTtcclxuXHJcblx0aWYgKCFNb3JhbGlzLldlYjMuaXNXZWIzRW5hYmxlZCgpKSByZXR1cm47XHJcblxyXG5cdHNldFNlbGVjdGVkU3ltYm9sQW5kQWRkcmVzcyhzeW1ib2wsIGFkZHJlc3MpO1xyXG5cclxuXHRsZXQgc2VsZWN0U3ltYm9sQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlbGVjdC1zeW1ib2wnKTtcclxuXHRzZWxlY3RTeW1ib2xCdG4uaW5uZXJIVE1MID0gbmFtZSArICcgKCcgKyBzeW1ib2wgKyAnKSc7XHJcblxyXG5cdHVwZGF0ZUJ1eUluZm8oc3ltYm9sLCBuYW1lLCBsb2dvKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHNldHVwU3RlcHMgPSBhc3luYyBmdW5jdGlvbihzaG93TmV0d29yaz8gOiBib29sZWFuKSB7XHJcblx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN0ZXAnKS5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XHJcblx0XHQodmFsdWUgYXMgSFRNTEVsZW1lbnQpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0fSlcclxuXHJcblx0Y29uc3QgaXNNZXRhTWFza0luc3RhbGxlZCA9IGF3YWl0IE1vcmFsaXMuaXNNZXRhTWFza0luc3RhbGxlZCgpO1xyXG5cclxuXHRpZiAoIWlzTWV0YU1hc2tJbnN0YWxsZWQpIHtcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnN0YWxsX21ldGFtYXNrJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRhd2FpdCBNb3JhbGlzLmVuYWJsZVdlYjMoKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRjb25zb2xlLmxvZygncmVzcG9uc2UnLCByZXNwb25zZSk7XHJcblx0fSkuY2F0Y2goZnVuY3Rpb24ocmVhc29uKSB7XHJcbmNvbnNvbGUubG9nKCdmYWlsZSB0byBlbmFibGUnLCByZWFzb24pO1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvbm5lY3Rfd2FsbGV0Jykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblx0XHQvL3VzZXIgaGFzIG5vdCBjb25uZWN0ZWQgdGhlIHdhbGxldFxyXG5cclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjbGlja190b19jb25uZWN0X3dhbGxldCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYXN5bmMgZnVuY3Rpb24oZXZ0KSB7XHJcblx0XHRcdGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRhd2FpdCBNb3JhbGlzLmVuYWJsZVdlYjMoKTtcclxuXHRcdFx0c2V0dXBTdGVwcygpO1xyXG5cdFx0fSk7XHJcblx0XHRyZXR1cm47XHJcblxyXG5cdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRjb25zb2xlLmxvZygnZmluYWxseScpXHJcblx0fSk7XHJcbmNvbnNvbGUubG9nKCdtb3JhbGlzIGNoYWluOicsIE1vcmFsaXMuY2hhaW5JZCk7XHJcblx0Y29uc3QgY2hhaW5JZCA9IHBhcnNlSW50KGF3YWl0IE1vcmFsaXMuY2hhaW5JZCwgMTYpOztcclxuXHRsZXQgbmV0d29ya0luZm8gPSB0cnlHZXROZXR3b3JrKGNoYWluSWQpO1xyXG5cdGlmIChuZXR3b3JrSW5mbykge1xyXG5cdFx0TWFpbi5OZXR3b3JrSW5mby5zZXROZXR3b3JrKG5ldHdvcmtJbmZvKTtcclxuXHR9XHJcblx0Y29uc29sZS5sb2coJ2NoYWluczonLCBjaGFpbklkLCBuZXR3b3JrSW5mby5DaGFpbklkKTtcclxuXHJcblx0aWYgKG5ldHdvcmtJbmZvLkNoYWluSWQgIT0gY2hhaW5JZCB8fCBzaG93TmV0d29yaykge1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlbGVjdF9uZXR3b3JrJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblx0XHRpZiAod2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZignMTI3LicpICE9IC0xKSB7XHJcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduZXR3b3JrX2xvY2FsaG9zdCcpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0fVxyXG5cdFx0Y29uc3Qgb3B0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5uZXR3b3JrX2Nob29zZXInKTtcclxuXHRcdGZvciAobGV0IGk9MDtpPG9wdGlvbnMubGVuZ3RoO2krKykge1xyXG5cdFx0XHRvcHRpb25zW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYXN5bmMgZnVuY3Rpb24oZXZ0KSB7XHJcblx0XHRcdFx0ZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coJ2NoYWluIGlkOicsIChldnQudGFyZ2V0IGFzIEhUTUxFbGVtZW50KS5kYXRhc2V0LmNoYWluaWQpO1xyXG5cdFx0XHRcdHRyeSB7XHJcblx0XHRcdFx0XHRjb25zdCBjaGFpbklkSGV4ID0gYXdhaXQgTW9yYWxpcy5zd2l0Y2hOZXR3b3JrKChldnQudGFyZ2V0IGFzIEhUTUxFbGVtZW50KS5kYXRhc2V0LmNoYWluaWQpXHJcblx0XHRcdFx0XHQudGhlbihhc3luYyBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0YXdhaXQgTW9yYWxpcy5Vc2VyLmxvZ091dCgpO1xyXG5cdFx0XHRcdFx0XHR3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcblx0XHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdFx0YWRkTmV0d29ya1RvV2FsbGV0KHBhcnNlSW50KChldnQudGFyZ2V0IGFzIEhUTUxFbGVtZW50KS5kYXRhc2V0LmNoYWluaWQpKTtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH1jYXRjaCAoZSkge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coZSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybjtcclxuXHR9XHJcbmxldCB1c2VyID0gTW9yYWxpcy5Vc2VyLmN1cnJlbnQoKTtcclxuY29uc29sZS5sb2coJ3VzZXInLCB1c2VyKTtcclxuXHRpZiAodXNlciA9PSBudWxsKSB7XHJcblx0XHQvL3VzZXIgaXMgbm90IGxvZ2dlZCBpbiwgbGV0cyBsb2cgeW91IGluXHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9naW5fdXNlcicpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NsaWNrX3RvX2xvZ2luX3VzZXInKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2dCkge1xyXG5cdFx0XHRldnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcblx0XHRcdGxvZ2luKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHNldHVwU3RlcHMoKTtcclxuXHRcdFx0fSlcclxuXHRcdFx0LypNb3JhbGlzLmF1dGhlbnRpY2F0ZSgpLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcclxuXHRcdFx0XHRzZXR1cFN0ZXBzKCk7XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2dpbl91c2VyX2Vycm9yJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblx0XHRcdH0pKi9cclxuXHRcdH0pO1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0YXdhaXQgS1lDVXNlcklzVmFsaWQoKTtcclxuXHRjb25zb2xlLmxvZygnSXNWYWxpZEtZQzonLCBJc1ZhbGlkS1lDKTtcclxuXHRpZiAoIUlzVmFsaWRLWUMpIHtcclxuXHJcblx0XHQvL3VzZXIgbmVlZHMgdG8gZG8ga3ljXHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3ljX3JlZ2lzdHJhdGlvbicpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NsaWNrX3RvX2t5Y19yZWcnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2dCkge1xyXG5cdFx0XHRldnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcblx0XHRcdHJlbmRlcigna3ljJywgbnVsbCwgaW5pdEtZQyk7XHJcblx0XHR9KVxyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0Y2hlY2tCYWxhbmNlT2ZBVXNkKCk7XHJcblxyXG5cdGlmIChhVXNkQW1vdW50IDwgMSkge1xyXG5cdFx0Ly9zaG93IGZ1bmRpbmcgc3RlcFxyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Z1bmRfYWNjb3VudCcpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FjY291bnRfbm90X3JlYWR5Jykuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FkZF9hdXNkX3RvX3dhbGxldCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYXN5bmMgZnVuY3Rpb24oZXZ0KSB7XHJcblx0XHRcdGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRcdFx0YXdhaXQgYWRkVG9rZW5Ub1dhbGxldChNYWluLkNvbnRyYWN0QWRkcmVzc2VzSW5mby5BVVNEX0FERFJFU1MsICdhVVNEJyk7XHJcblx0XHR9KTtcclxuXHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnVuZFVTREMnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2dCkge1xyXG5cdFx0XHRldnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0Ly9mdW5kIHVzZGNcclxuXHRcdFx0Ly90cmFuc2ZlclVTREMoKTtcclxuXHRcdH0pO1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Z1bmRBVVNEJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldnQpIHtcclxuXHRcdFx0ZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdC8vIGZ1bmQgYXVzZCwgbW9yYWxpc1xyXG5cdFx0XHRmdW5kVXNlcigpO1xyXG5cclxuXHRcdH0pXHJcblxyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0Ly9sZXRzIGJ1eSBzZWN1cml0aWVzXHJcblxyXG59O1xyXG5cclxuY29uc3QgYWRkTmV0d29ya1RvV2FsbGV0ID0gYXN5bmMgZnVuY3Rpb24oY2hhaW5JZCA6IG51bWJlcikge1xyXG5cdGxldCBuZXR3b3JrSW5mbyA9IHRyeUdldE5ldHdvcmsoY2hhaW5JZCk7XHJcblxyXG5cdGNvbnN0IHdlYjMgPSBhd2FpdCBNb3JhbGlzLmVuYWJsZVdlYjMoKTtcclxuXHR3ZWIzLnByb3ZpZGVyLnJlcXVlc3Qoe1xyXG5cdFx0bWV0aG9kOiAnd2FsbGV0X2FkZEV0aGVyZXVtQ2hhaW4nLFxyXG5cdFx0cGFyYW1zOiBbe1xyXG5cdFx0XHRjaGFpbklkOiBjaGFpbklkLFxyXG5cdFx0XHRjaGFpbk5hbWU6IG5ldHdvcmtJbmZvLkNoYWluTmFtZSxcclxuXHRcdFx0bmF0aXZlQ3VycmVuY3k6IHtcclxuXHRcdFx0XHRuYW1lOiBuZXR3b3JrSW5mby5OYXRpdmVDdXJyZW5jeU5hbWUsXHJcblx0XHRcdFx0c3ltYm9sOiBuZXR3b3JrSW5mby5OYXRpdmVTeW1ib2wsXHJcblx0XHRcdFx0ZGVjaW1hbHM6IG5ldHdvcmtJbmZvLk5hdGl2ZURlY2ltYWxcclxuXHRcdFx0fSxcclxuXHRcdFx0cnBjVXJsczogW25ldHdvcmtJbmZvLlJwY1VybF0sXHJcblx0XHRcdGJsb2NrRXhwbG9yZXJVcmxzOiBbbmV0d29ya0luZm8uQmxvY2tFeHBsb3Jlcl1cclxuXHRcdH1dXHJcblx0fSkuY2F0Y2goKGVycm9yKSA9PiB7XHJcblx0XHRjb25zb2xlLmxvZyhlcnJvcilcclxuXHR9KVxyXG59XHJcblxyXG5jb25zdCBmdW5kVXNlciA9IGFzeW5jIGZ1bmN0aW9uKCkge1xyXG5cdGNvbnN0IHBhcmFtcyA9IHtcclxuXHRcdGNoYWluSWQ6IE1haW4uTmV0d29ya0luZm8uQ2hhaW5JZFxyXG5cdH07XHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FjY291bnRfbm90X3JlYWR5Jykuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG5cdE1vcmFsaXMuQ2xvdWQucnVuKCdmdW5kVXNlcicsIHBhcmFtcykudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0c2hvd1dhaXRpbmdGb3JGdW5kaW5nKCk7XHJcblx0XHRyZXR1cm47XHJcblxyXG5cdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FjY291bnRfbm90X3JlYWR5Jykuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuXHR9KTtcclxufVxyXG5cclxuY29uc3QgY2hlY2tOYXRpdmVUb2tlblN0YXR1cyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xyXG5cdGNvbnN0IG9wdGlvbnMgOiBhbnkgPSB7IGNoYWluOiBNYWluLk5ldHdvcmtJbmZvLk5hbWUgfTtcclxuXHRjb25zdCByZXN1bHQgPSBhd2FpdCBNb3JhbGlzLldlYjNBUEkuYWNjb3VudC5nZXROYXRpdmVCYWxhbmNlKG9wdGlvbnMpO1xyXG4vLzAuMDAyOTk4XHJcblx0Y29uc3QgYmFsYW5jZSA9IHBhcnNlRmxvYXQoTW9yYWxpcy5Vbml0cy5Gcm9tV2VpKHJlc3VsdC5iYWxhbmNlLCAxOCkpO1xyXG5cdGlmIChTZWxlY3RlZFN5bWJvbEFkZHJlc3MgPT0gQWRkcmVzc1plcm8gJiYgYmFsYW5jZSA8IDAuMDA1KSB7XHJcblx0XHRzaG93TmVlZE5hdGl2ZVRva2VuKCk7XHJcblx0fSBlbHNlIGlmIChiYWxhbmNlIDwgMC4wMDA3KSB7XHJcblx0XHRzaG93TmVlZE5hdGl2ZVRva2VuKCk7XHJcblx0fSBlbHNlIHtcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduZWVkX25hdGl2ZV90b2tlbicpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0fVxyXG59O1xyXG5cclxuY29uc3Qgc2hvd05lZWROYXRpdmVUb2tlbiA9IGFzeW5jIGZ1bmN0aW9uKCkge1xyXG5cdGNvbnN0IHVzZXIgPSBhd2FpdCBNb3JhbGlzLlVzZXIuY3VycmVudCgpO1xyXG5cclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmVlZF9uYXRpdmVfdG9rZW4nKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuXHQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hdGl2ZV90b2tlbl9hZGRyZXNzJykgYXMgSFRNTElucHV0RWxlbWVudCkudmFsdWUgPSBhd2FpdCB1c2VyLmdldCgnZXRoQWRkcmVzcycpO1xyXG5cclxuXHRzZXRUaW1lb3V0KGNoZWNrTmF0aXZlVG9rZW5TdGF0dXMsIDIwKjEwMDApO1xyXG59XHJcblxyXG5jb25zdCBzZXR1cEJ1eUJ1dHRvbiA9IGZ1bmN0aW9uICgpIHtcclxuXHJcblxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGVjdXRlLXRyYWRlJykuY2xhc3NMaXN0LnJlbW92ZSgnZGlzYWJsZWQnKVxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGVjdXRlLXRyYWRlJykuY2xhc3NMaXN0LmFkZCgnZW5hYmxlZCcpO1xyXG5cdGlmIChJc1ZhbGlkS1lDKSB7XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhlY3V0ZS10cmFkZScpLm9uY2xpY2sgPSB0cmFuc2ZlcjtcclxuXHR9IGVsc2Uge1xyXG5cdFx0Y29uc3QgdXNlciA9IE1vcmFsaXMuVXNlci5jdXJyZW50KCk7XHJcblx0XHRpZiAoIXVzZXIpIHtcclxuXHRcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V4ZWN1dGUtdHJhZGUnKS5pbm5lclRleHQgPSBcIkxvZ2luIHVzaW5nIE1ldGFtYXNrXCI7XHJcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGVjdXRlLXRyYWRlJykub25jbGljayA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRsb2dpbihzZXR1cEJ1eUJ1dHRvbik7XHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGVjdXRlLXRyYWRlJykuaW5uZXJUZXh0ID0gJ1lvdSBuZWVkIHRvIGRvIChmYWtlKSBLWUMgYmVmb3JlIGJ1eWluZyc7XHJcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGVjdXRlLXRyYWRlJykub25jbGljayA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRyZW5kZXIoJ2t5YycsIG51bGwsIGluaXRLWUMpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5cclxuY29uc3Qgc2hvd1dhaXRpbmdGb3JGdW5kaW5nID0gZnVuY3Rpb24oKSB7XHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dhaXRpbmdfZm9yX2Z1bmRpbmcnKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnV5X3NlY3VyaXRpZXNfd3JhcHBlcicpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmdW5kX2FjY291bnQnKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnV5X2hlYWRsaW5lJykuaW5uZXJIVE1MID0gXCJMZXQncyBwbGF5Li4uIPCfmoDwn5qA8J+agFwiO1xyXG5cdGxldCB0ZXh0ID0gXCJZb3UgY3VycmVudGx5IGhhdmUgPHN0cm9uZz4kXCIgKyByb3VuZE51bWJlcihhVXNkQW1vdW50KSArIFwiIGFVU0Q8L3N0cm9uZz4uXCJcclxuXHRcdCsgXCIgTGV0cyB0cnkgaXQgYW55d2F5LiBUeXBlIGluIGFueSBhbW91bnQgaW4gdGhlIGJveCBiZWxvdyBhbmQgc2VsZWN0IGEgc3ltYm9sLlwiXHJcblx0XHQrIFwiIFlvdSB3aWxsIHNlZSBob3cgbWFueSBzaGFyZXMgeW91IHdpbGwgZ2V0IGZvciB0aGF0IGFtb3VudFwiO1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXlfdGV4dCcpLmlubmVySFRNTCA9IHRleHQ7XHJcblxyXG5cdGNoZWNrQmFsYW5jZU9mQVVzZCgpO1xyXG59XHJcblxyXG5jb25zdCBjaGVja0JhbGFuY2VPZkFVc2QgPSBhc3luYyBmdW5jdGlvbigpIHtcclxuXHJcblx0YVVzZEFtb3VudCA9IGF3YWl0IGdldEFVU0RBbW91bnQoKTtcclxuXHJcblx0aWYgKGFVc2RBbW91bnQgPj0gMSkge1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dhaXRpbmdfZm9yX2Z1bmRpbmcnKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1eV9oZWFkbGluZScpLmlubmVySFRNTCA9IFwiTGV0J3MgYnV5IHNvbWV0aGluZyFcIjtcclxuXHRcdGxldCB0ZXh0ID0gXCJZb3UgY3VycmVudGx5IGhhdmUgPHN0cm9uZz4kXCIgKyByb3VuZE51bWJlcihhVXNkQW1vdW50KSArIFwiIGFVU0QuPC9zdHJvbmc+XCJcclxuXHRcdFx0XHQrIFwiIFlvdSBjYW4gbm93IGJ1eSB5b3VyIG93biBzZWN1cml0aWVzLlwiO1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1eV90ZXh0JykuaW5uZXJIVE1MID0gdGV4dDtcclxuXHRcdHVwZGF0ZUJ1eUluZm8oU3ltYm9sKTtcclxuXHRcdHNob3dVc2VXYWxsZXRGb3JPcmRlcnMoKTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0c2V0VGltZW91dChhd2FpdCBjaGVja0JhbGFuY2VPZkFVc2QsIDMwICogMTAwMCk7XHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBzaG93VXNlV2FsbGV0Rm9yT3JkZXJzID0gZnVuY3Rpb24oKSB7XHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NyZWF0ZS1vcmRlcicpLmNsYXNzTGlzdC5hZGQoJ3NpZGViYXInKTtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXNlX3dhbGxldF9mb3Jfb3JkZXJzJykuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXlfc2VjdXJpdGllc193cmFwcGVyJykuc3R5bGUuZGlzcGxheT0naW5saW5lLWJsb2NrJztcclxufVxyXG5cclxuXHJcbmNvbnN0IGdldEFVU0RBbW91bnQgPSBhc3luYyBmdW5jdGlvbiAoKSB7XHJcblx0Y29uc3QgdXNlciA9IGF3YWl0IE1vcmFsaXMuVXNlci5jdXJyZW50KCk7XHJcblx0aWYgKCF1c2VyKSByZXR1cm4gMDtcclxuXHJcblx0Y29uc3QgZXRoQWRkcmVzcyA9IGF3YWl0IHVzZXIuZ2V0KCdldGhBZGRyZXNzJyk7XHJcblx0Y29uc3QgYXVzZGNPcHRpb25zID0ge1xyXG5cdFx0Y29udHJhY3RBZGRyZXNzOiBNYWluLkNvbnRyYWN0QWRkcmVzc2VzSW5mby5BVVNEX0FERFJFU1MsXHJcblx0XHRmdW5jdGlvbk5hbWU6IFwiYmFsYW5jZU9mXCIsXHJcblx0XHRhYmk6IEFVU0RJbmZvLmFiaSxcclxuXHRcdHBhcmFtczoge1xyXG5cdFx0XHRhY2NvdW50OiBldGhBZGRyZXNzXHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0bGV0IGFtb3VudCA9IGF3YWl0IE1vcmFsaXMuZXhlY3V0ZUZ1bmN0aW9uKGF1c2RjT3B0aW9ucykudGhlbihiYWxhbmNlT2YgPT4ge1xyXG5cdFx0Y29uc29sZS5sb2coJ2JhbGFuY2VPZiBvYmo6JywgYmFsYW5jZU9mKVxyXG5cclxuXHJcblx0XHRsZXQgYW1vdW50ID0gTW9yYWxpcy5Vbml0cy5Gcm9tV2VpKGJhbGFuY2VPZiBhcyBCaWdOdW1iZXIsIDE4KTtcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGRfYXVzZF90b193YWxsZXRfbWVudScpLmlubmVySFRNTCA9ICdZb3UgaGF2ZSAnICsgcm91bmROdW1iZXIocGFyc2VGbG9hdChhbW91bnQpKSArICcgYVVTRCBpbiB5b3VyIGJyb2tlciBhY2NvdW50JztcclxuXHRcdHJldHVybiBhbW91bnQ7XHJcblx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRjb25zb2xlLmVycm9yKGVycik7XHJcblx0fSk7XHJcblx0cmV0dXJuIGFtb3VudDtcclxufVxyXG5cclxuY29uc3Qgc2V0dXBBc3NldHMgPSBhc3luYyBmdW5jdGlvbiAoKSB7XHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlbGVjdC1zeW1ib2wnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2dCkge1xyXG5cdFx0bG9hZFNlY3VyaXRpZXNNb2RhbChldnQpO1xyXG5cdH0pO1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXlfYW1vdW50Jykub25jaGFuZ2UgPSBmdW5jdGlvbigpIHtcclxuXHRcdHVwZGF0ZUJ1eUluZm8oU3ltYm9sKTtcclxuXHR9XHJcblxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmaW5kU3ltYm9sJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldnQpIHtcclxuXHRcdGxvYWRTZWN1cml0aWVzTW9kYWwoZXZ0KTtcclxuXHR9KTtcclxufTtcclxuXHJcbmNvbnN0IGxvYWRTZWN1cml0aWVzTW9kYWwgPSBhc3luYyBmdW5jdGlvbihldnQpIHtcclxuXHRldnQucHJldmVudERlZmF1bHQoKTtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWxTZWN1cml0aWVzJykuc3R5bGUuZGlzcGxheT0nYmxvY2snO1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdiYWNrZHJvcCcpLnN0eWxlLmRpc3BsYXk9J2Jsb2NrJztcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWxTZWN1cml0aWVzJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldnQpe1xyXG5cdFx0Y29uc29sZS5sb2coKGV2dC50YXJnZXQgYXMgSFRNTEVsZW1lbnQpLmlkKTtcclxuXHRcdGlmICgoZXZ0LnRhcmdldCBhcyBIVE1MRWxlbWVudCkuaWQgPT0gJ21vZGFsU2VjdXJpdGllcycgfHwgKGV2dC50YXJnZXQgYXMgSFRNTEVsZW1lbnQpLmlkID09ICdjbG9zZU1vZGFsJykge1xyXG5cdFx0XHRoaWRlTW9kYWxTZWN1cml0aWVzKCk7XHJcblx0XHR9XHJcblx0fSlcclxuXHJcblx0cmVuZGVyKCdzZWN1cml0aWVzJywgbnVsbCwgZnVuY3Rpb24oKSB7bG9hZFNlY3VyaXRpZXModHJ1ZSl9LCAnbW9kYWwtYm9keScpO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGhpZGVNb2RhbFNlY3VyaXRpZXMgPSBmdW5jdGlvbigpIHtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWxTZWN1cml0aWVzJykuc3R5bGUuZGlzcGxheT0nbm9uZSc7XHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JhY2tkcm9wJykuc3R5bGUuZGlzcGxheT0nbm9uZSc7XHJcbn1cclxuXHJcblxyXG5cclxuY29uc3QgZ2V0U3ltYm9sUHJpY2UgPSBhc3luYyBmdW5jdGlvbiAoZXZ0PyA6IEV2ZW50KSB7XHJcblx0aWYgKGV2dCkge1xyXG5cdFx0ZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcblx0fVxyXG5cclxuXHRpZiAoU3ltYm9sID09PSAnJykge1xyXG5cdFx0YXNzZXRQcmljZSA9IDA7XHJcblx0XHRsYXN0VHJhZGVkID0gJyc7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRvZmZIb3Vyc0luZm8oKTtcclxuXHRTZWxlY3RlZFN5bWJvbEFkZHJlc3MgPSBhd2FpdCBnZXRTeW1ib2xDb250cmFjdEFkZHJlc3MoU3ltYm9sKTtcclxuXHRjb25zb2xlLmxvZygnY29udHJhY3RBZGRyZXNzczonLCBTZWxlY3RlZFN5bWJvbEFkZHJlc3MpO1xyXG5cdGlmIChTZWxlY3RlZFN5bWJvbEFkZHJlc3MgPT0gQWRkcmVzc1plcm8pIHtcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGVjdXRlLXRyYWRlJykuaW5uZXJIVE1MID0gXCJDcmVhdGUgdG9rZW4gJiBleGVjdXRlIHRyYWRlXCI7XHJcblx0XHQvL1RPRE8gZm9yIHNhbmRib3ggbGV0cyBub3Qgc2hvdyB0aGlzLCBidXQgZm9yIGxpdmUgd2UgbmVlZCB0byBzaG93LlxyXG5cdFx0Ly9kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkLXRva2VuLWluZm8nKS5zdHlsZS5kaXNwbGF5PSdibG9jayc7XHJcblx0XHQvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGQtdG9rZW4taW5mbycpLmlubmVySFRNTCA9IFwiPGRpdiA+V2Ugd2lsbCBuZWVkIHRvIGNyZWF0ZSB0aGUgdG9rZW4gd2hlbiB5b3UgYnV5IGl0LiBTaW5jZSB5b3UgYXJlIHRoZSBmaXJzdCBvbmUgdG8gYnV5IHRoaXMgc3ltYm9sLCB0aGlzIHdpbGwgaW5jdXJlIGV4dHJhIGNvc3QuIEl0J3MgYSBsb3cgY29zdDwvZGl2PlwiO1xyXG5cdH0gZWxzZSB7XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhlY3V0ZS10cmFkZScpLmlubmVySFRNTCA9IFwiRXhlY3V0ZSB0cmFkZVwiO1xyXG5cdFx0YWRkVG9rZW5MaW5rKFN5bWJvbCwgU2VsZWN0ZWRTeW1ib2xBZGRyZXNzKTtcclxuXHR9XHJcblxyXG5cdGF3YWl0IGxvYWRBc3NldFByaWNlKCk7XHJcblx0dXBkYXRlQnV5SW5mbyhTeW1ib2wpO1xyXG59XHJcblxyXG5jb25zdCBsb2FkQXNzZXRQcmljZSA9IGFzeW5jIGZ1bmN0aW9uKCkge1xyXG5cclxuXHRjb25zdCBwYXJhbXMgPSB7XHJcblx0XHRzeW1ib2w6IFN5bWJvbFxyXG5cdH07XHJcblx0cmV0dXJuIGF3YWl0IE1vcmFsaXMuQ2xvdWQucnVuKFwiZ2V0U3ltYm9sUHJpY2VcIiwgcGFyYW1zKS50aGVuKGZ1bmN0aW9uIChqc29uUmVzdWx0KSB7XHJcblx0XHRhc3NldFByaWNlID0ganNvblJlc3VsdC50cmFkZS5wO1xyXG5cdFx0bGFzdFRyYWRlZCA9IGpzb25SZXN1bHQudHJhZGUudDtcclxuXHR9KTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldFN5bWJvbENvbnRyYWN0QWRkcmVzcyA9IGFzeW5jIGZ1bmN0aW9uKHN5bWJvbCkge1xyXG5cclxuXHRcdFx0Y29uc3Qgc2VjdXJpdHlUb2tlbk9wdGlvbnMgPSB7XHJcblx0XHRcdGNvbnRyYWN0QWRkcmVzczogTWFpbi5Db250cmFjdEFkZHJlc3Nlc0luZm8uTElNSU5BTF9NQVJLRVRfQUREUkVTUyxcclxuXHRcdFx0ZnVuY3Rpb25OYW1lOiBcImdldFNlY3VyaXR5VG9rZW5cIixcclxuXHRcdFx0YWJpOiBMaW1pbmFsTWFya2V0SW5mby5hYmksXHJcblx0XHRcdHBhcmFtczoge1xyXG5cdFx0XHRcdHN5bWJvbDogc3ltYm9sXHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0XHRyZXR1cm4gYXdhaXQgTW9yYWxpcy5leGVjdXRlRnVuY3Rpb24oc2VjdXJpdHlUb2tlbk9wdGlvbnMpO1xyXG5cclxufVxyXG5cclxuY29uc3Qgb2ZmSG91cnNJbmZvID0gYXN5bmMgZnVuY3Rpb24oKSB7XHJcblx0YXdhaXQgaXNNYXJrZXRPcGVuKCk7XHJcblxyXG5cdGlmICghSXNNYXJrZXRPcGVuICYmICFVc2VySXNPZmZIb3Vycykge1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ29mZkhvdXJzSW5mbycpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V4ZWN1dGUtdHJhZGUnKS5pbm5lckhUTUwgPSBFeGVjdXRlVHJhZGVPZmZIb3Vyc1R4dDtcclxuXHR9IGVsc2Uge1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ29mZkhvdXJzSW5mbycpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhlY3V0ZS10cmFkZScpLmlubmVySFRNTCA9ICdFeGVjdXRlIHRyYWRlJztcclxuXHR9XHJcbn07XHJcblxyXG5jb25zdCBhZGRUb2tlbkxpbmsgPSBmdW5jdGlvbihzeW1ib2wsIGNvbnRyYWN0QWRkcmVzcykge1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGQtdG9rZW4taW5mbycpLnN0eWxlLmRpc3BsYXk9J25vbmUnO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZFRva2VuTGlua0JvdHRvbSA9IGFzeW5jIGZ1bmN0aW9uKHN5bWJvbCwgY29udHJhY3RBZGRyZXNzKSB7XHJcblx0Y29uc3QgYXNzZXQgPSBhd2FpdCBnZXRBc3NldEJ5U3ltYm9sKHN5bWJvbCk7XHJcblxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGROZXdUb2tlblRvV2FsbGV0Jykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblx0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2tlbkxvZ28nKSBhcyBIVE1MSW1hZ2VFbGVtZW50KS5zcmMgPSAnL2ltZy9sb2dvcy8nICsgYXNzZXQuTG9nbztcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkTmV3VG9rZW5UZXh0JykuaW5uZXJIVE1MID0gJ0FkZCAnICsgc3ltYm9sICsgJyB0byB5b3VyIHdhbGxldC4nO1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGROZXdUb2tlbicpLm9uY2xpY2sgPSBhc3luYyBmdW5jdGlvbiAoZXZ0KSB7XHJcblx0XHRldnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdGF3YWl0IGFkZFRva2VuVG9XYWxsZXQoY29udHJhY3RBZGRyZXNzLCBzeW1ib2wpO1xyXG5cdH07XHJcblxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHVwZGF0ZUJ1eUluZm8gPSBhc3luYyBmdW5jdGlvbiAoc3ltYm9sIDogc3RyaW5nLCBuYW1lPyA6IHN0cmluZywgbG9nbz8gOiBzdHJpbmcpIHtcclxuXHRpZiAoIXN5bWJvbCkgcmV0dXJuO1xyXG5cdGxldCBidXlBbW91bnQgPSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1eV9hbW91bnQnKSBhcyBIVE1MSW5wdXRFbGVtZW50KS52YWx1ZTtcclxuXHRpZiAoYnV5QW1vdW50ID09PSAnJyB8fCBhc3NldFByaWNlID09IG51bGwpIHJldHVybjtcclxuXHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1eV9zdWNjZXNzX21lc3NhZ2UnKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cdGxldCBzdHIgPSAnRXN0aW1hdGVkIHlvdSB3aWxsIGJ1eSAnICsgcm91bmROdW1iZXIocGFyc2VGbG9hdChidXlBbW91bnQpIC8gYXNzZXRQcmljZSkgKyAnIHNoYXJlcyBhdCB0aGUgcHJpY2Ugb2YgJCcgKyBhc3NldFByaWNlICsgJyBwZXIgc2hhcmUuICc7XHJcblx0c3RyICs9ICdMYXN0IHRyYWRlIHdhcyAnICsgKG5ldyBEYXRlKGxhc3RUcmFkZWQpKS50b0xvY2FsZVN0cmluZygpO1xyXG5cdGlmIChTZWxlY3RlZFN5bWJvbEFkZHJlc3MgPT0gQWRkcmVzc1plcm8pIHtcclxuXHRcdHN0ciArPSAnPGJyIC8+PHNwYW4gY2xhc3M9XCJzbWFsbF9wcmludFwiPlNpbmNlIHlvdSBhcmUgdGhlIGZpcnN0IG9uZSB0byBidXkgJyArIHN5bWJvbCArIFwiIHlvdSB3aWxsIGJlIGFza2VkIHRvIGNyZWF0ZSB0aGUgdG9rZW4gZmlyc3QsIHRoZW4gd2UnbGwgZXhlY3V0ZSB0aGUgdHJhZGU8L3NwYW4+XCI7XHJcblx0fVxyXG5cclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnV5LWluZm8nKS5pbm5lckhUTUwgPSBzdHI7XHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1eS1pbmZvJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblx0Y2hlY2tUb2tlblZhbHVlVnNCdXlBbW91bnQoKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjaGVja1Rva2VuVmFsdWVWc0J1eUFtb3VudCA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnV5X2Rhbmdlcl9tZXNzYWdlJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRsZXQgYnV5QW1vdW50ID0gKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXlfYW1vdW50JykgYXMgSFRNTElucHV0RWxlbWVudCkudmFsdWU7XHJcblxyXG5cdHZhciB1c2VyID0gTW9yYWxpcy5Vc2VyLmN1cnJlbnQoKTtcclxuXHRpZiAoIXVzZXIpIHtcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXlfZGFuZ2VyX21lc3NhZ2UnKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuXHRcdGxldCBzdHIgPSAnWW91IGFyZSBub3QgbG9nZ2VkIGluLiBMb2dpbiBpbiB0aGUgbWVudSBhdCB0b3AuJztcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXlfZGFuZ2VyX21lc3NhZ2UnKS5pbm5lckhUTUwgPSBzdHI7XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG5cclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhlY3V0ZS10cmFkZScpLmNsYXNzTGlzdC5hZGQoJ2Rpc2FibGVkJyk7XHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V4ZWN1dGUtdHJhZGUnKS5jbGFzc0xpc3QucmVtb3ZlKCdlbmFibGVkJyk7XHJcblxyXG5cdGlmIChhVXNkQW1vdW50IDwgYnV5QW1vdW50KSB7XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnV5X2Rhbmdlcl9tZXNzYWdlJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnV5X2Rhbmdlcl9tZXNzYWdlJykuaW5uZXJIVE1MID0gXCJZb3UgZG9uJ3QgaGF2ZSBlbm91Z2ggYVVTRCB0b2tlbnMgaW4geW91ciB3YWxsZXQuXCI7XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG5cdGNoZWNrTmF0aXZlVG9rZW5TdGF0dXMoKTtcclxuXHRhd2FpdCBzZXR1cEJ1eUJ1dHRvbigpO1xyXG59O1xyXG5cclxuXHJcbmNvbnN0IHNob3dQcm9ncmVzc1N0ZXAgPSBhc3luYyBmdW5jdGlvbiAodGV4dCA6IHN0cmluZywgcGVyYyA6IG51bWJlciwgd2FybmluZz8gOiBib29sZWFuKSB7XHJcblxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXlfcHJvZ3Jlc3MnKS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG5cdHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1eWluZ19zdGVwcycpO1xyXG5cdGVsZW1lbnQuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9XCJwcm9ncmVzc190ZXh0XCI+JyArIHRleHQgKyAnPC9kaXY+JztcclxuXHRlbGVtZW50LnN0eWxlLndpZHRoID0gcGVyYyArICclJztcclxuXHJcblx0ZWxlbWVudC5jbGFzc0xpc3QudG9nZ2xlKCdwcm9ncmVzcy1iYXItc3RyaXBlZCcsIChwZXJjICE9IDEwMCkpO1xyXG5cdGVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgncHJvZ3Jlc3MtYmFyLWFuaW1hdGVkJywgKHBlcmMgIT0gMTAwKSk7XHJcblx0aWYgKHdhcm5pbmcpIHtcclxuXHRcdGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnYmctd2FybmluZycpO1xyXG5cdFx0ZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwcm9ncmVzc190ZXh0X2F0dG4nKTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0ZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdiZy13YXJuaW5nJyk7XHJcblx0XHRlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3Byb2dyZXNzX3RleHRfYXR0bicpO1xyXG5cdH1cclxuXHJcbn07XHJcblxyXG5jb25zdCBoaWRlUHJvY2Vzc1N0ZXAgPSBmdW5jdGlvbigpIHtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnV5X3Byb2dyZXNzJykuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGVjdXRlLXRyYWRlJykuc3R5bGUuZGlzcGxheT0nYmxvY2snO1xyXG59O1xyXG5cclxuXHJcblxyXG5jb25zdCB0cmFuc2ZlciA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuXHRjb25zdCBidXlBbW91bnQgPSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1eV9hbW91bnQnKSBhcyBIVE1MSW5wdXRFbGVtZW50KS52YWx1ZTtcclxuXHRpZiAoU3ltYm9sID09PSAnJyB8fCBidXlBbW91bnQgPT09ICcnKSByZXR1cm47XHJcblxyXG5cdGlmICghY2hlY2tUb2tlblZhbHVlVnNCdXlBbW91bnQoKSkgcmV0dXJuIGZhbHNlO1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGVjdXRlLXRyYWRlJykuc3R5bGUuZGlzcGxheT0nbm9uZSc7XHJcblxyXG5cdGlmKFNlbGVjdGVkU3ltYm9sQWRkcmVzcyA9PSBudWxsKSB7XHJcblx0XHRTZWxlY3RlZFN5bWJvbEFkZHJlc3MgPSBhd2FpdCBnZXRTeW1ib2xDb250cmFjdEFkZHJlc3MoU3ltYm9sKTtcclxuXHR9XHJcblxyXG5cdGlmIChTZWxlY3RlZFN5bWJvbEFkZHJlc3MgPT0gQWRkcmVzc1plcm8pIHtcclxuXHJcblx0XHRzaG93UHJvZ3Jlc3NTdGVwKCdGaXJzdCB3ZSBuZWVkIHRvIGNyZWF0ZSB0b2tlbiwgeW91IG5lZWQgdG8gY29uZmlybScsIDk5KTtcclxuXHRcdHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBjaGVja1RvU2hvd01ldGFtYXNrSWNvbignRmlyc3Qgd2UgbmVlZCcpIH0sICgxMCAqIDEwMDApKTtcclxuXHJcblx0XHRsZXQgdHhSZXN1bHQgPSBhd2FpdCBleGVjdXRlQ3JlYXRlVG9rZW4oU3ltYm9sKS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0aGlkZVByb2Nlc3NTdGVwKCk7XHJcblx0XHRcdHJldHVybiBudWxsO1xyXG5cdFx0fSk7XHJcblx0XHRpZih0eFJlc3VsdCA9PSBudWxsKSByZXR1cm47XHJcblxyXG5cdFx0Y29uc29sZS5sb2codHhSZXN1bHQpO1xyXG5cdFx0aWYgKHR4UmVzdWx0LmV2ZW50cy5Ub2tlbkNyZWF0ZWQpIHtcclxuXHRcdFx0U2VsZWN0ZWRTeW1ib2xBZGRyZXNzID0gdHhSZXN1bHQuZXZlbnRzLlRva2VuQ3JlYXRlZC5yZXR1cm5WYWx1ZXMudG9rZW5BZGRyZXNzO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Y29uc29sZS5sb2coJ3JlY2lwZW50JywgU2VsZWN0ZWRTeW1ib2xBZGRyZXNzKTtcclxuXHRpZiAoU2VsZWN0ZWRTeW1ib2xBZGRyZXNzID09IEFkZHJlc3NaZXJvKSByZXR1cm47XHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V4ZWN1dGUtdHJhZGUnKS5pbm5lckhUTUwgPSBcIkV4ZWN1dGUgdHJhZGVcIjtcclxuXHRsZXQgd2FpdGluZ1N0ciA9ICdXYWl0aW5nIG9uIGFwcHJvdmFsIHRvIGV4ZWN1dGUgdG8gYnV5ICc7XHJcblx0c2hvd1Byb2dyZXNzU3RlcCh3YWl0aW5nU3RyICsgU3ltYm9sICsgJyBmb3IgJCcgKyBidXlBbW91bnQgKyAnLicsIDk5KTtcclxuXHRzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgY2hlY2tUb1Nob3dNZXRhbWFza0ljb24od2FpdGluZ1N0cikgfSwgMTAgKiAxMDAwKTtcclxuXHJcblxyXG5cdGF3YWl0IHN1YnNjcmliZVRvVGFibGUoKTtcclxuXHJcblx0dmFyIGJ1eVJlc3VsdCA9IGF3YWl0IGV4ZWN1dGVCdXkoU2VsZWN0ZWRTeW1ib2xBZGRyZXNzLCBwYXJzZUZsb2F0KGJ1eUFtb3VudCkpO1xyXG5cdGlmIChidXlSZXN1bHQgPT0gbnVsbCkge1xyXG5cdFx0aGlkZVByb2Nlc3NTdGVwKCk7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRjb25zb2xlLmxvZygnYnV5UmVzdWx0JywgYnV5UmVzdWx0KTtcclxuXHJcblxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGQtdG9rZW4taW5mbycpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblxyXG5cclxufTtcclxuY29uc3Qgc3Vic2NyaWJlVG9UYWJsZSA9IGFzeW5jIGZ1bmN0aW9uKCkge1xyXG5cdGNvbnNvbGUubG9nKCdzdWJzY3JpYmUgdG8gdGFibGU6JyArIGdldE9yZGVyQnV5VGFibGVQcmVmaXgoKSArICdPcmRlckJ1eScpO1xyXG5cclxuXHRsZXQgcXVlcnkgPSBuZXcgTW9yYWxpcy5RdWVyeShnZXRPcmRlckJ1eVRhYmxlUHJlZml4KCkgKyAnT3JkZXJCdXknKTtcclxuXHRsZXQgc3Vic2NyaXB0aW9uID0gYXdhaXQgcXVlcnkuc3Vic2NyaWJlKCk7XHJcblxyXG5cdHN1YnNjcmlwdGlvbi5vbigndXBkYXRlJywgKHJlc3BvbnNlKSA9PiB7XHJcblx0XHRjb25zdCBvYmplY3QgPSByZXNwb25zZS50b0pTT04oKTtcclxuXHRcdGNvbnNvbGUubG9nKCdvYmplY3QgdXBkYXRlZCcsIEpTT04uc3RyaW5naWZ5KG9iamVjdCksIG9iamVjdCk7XHJcblx0XHRsZXQgZXRoTGluayA9ICcgPGEgY2xhc3M9XCJ3aGl0ZS1saW5rXCIgdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj1cImh0dHBzOi8vcmlua2VieS5ldGhlcnNjYW4uaW8vdHgvJyArIG9iamVjdC50cmFuc2FjdGlvbl9oYXNoICsgJ1wiPlZpZXcgdHJhbnNhY3Rpb248L2E+JztcclxuXHJcblx0XHRjb25zb2xlLmxvZygnc3RhdHVzOicsIG9iamVjdC5zdGF0dXMpO1xyXG5cdFx0aWYgKG9iamVjdC50b2tlbkFkZHJlc3MpIHtcclxuXHRcdFx0YWRkVG9rZW5MaW5rQm90dG9tKFN5bWJvbCwgU2VsZWN0ZWRTeW1ib2xBZGRyZXNzKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoKCFvYmplY3Quc3RhdHVzICYmIG9iamVjdC5jb25maXJtZWQpIHx8IG9iamVjdC5zdGF0dXMgPT0gJ21vbmV5X3NlbnQnKSB7XHJcblx0XHRcdHNob3dQcm9ncmVzc1N0ZXAoJ0Jsb2NrY2hhaW4gaGFzIGNvbmZpcm1lZCwgbW9uZXkgaGFzIGJlZW4gc2VudCB0byBicm9rZXIuJyArIGV0aExpbmssIDU2KVxyXG5cdFx0XHQvL2Jsb2NrY2hhaW4gaGFzIGNvbmZpcm1lZCwgbW9uZXkgd2lsbCBhcnJpdmUgc29vbiB0byBicm9rZXJcclxuXHRcdH0gZWxzZSBpZiAob2JqZWN0LnN0YXR1cyA9PSAnbW9uZXlfYXJyaXZlZCcpIHtcclxuXHRcdFx0c2hvd1Byb2dyZXNzU3RlcCgnTW9uZXkgaGFzIGFycml2ZWQsIHdpbGwgbm93IGV4ZWN1dGUgeW91ciBidXkgb3JkZXIuJyArIGV0aExpbmssIDcwKVxyXG5cdFx0XHQvL21vbmV5IGhhcyBhcnJpdmVkIHRvIGJyb2tlciwgd2Ugd2lsbCBub3cgZXhlY3V0ZSB5b3VyIG9yZGVyXHJcblx0XHR9IGVsc2UgaWYgKG9iamVjdC5zdGF0dXMgPT0gJ29yZGVyX3JlcXVlc3RlZCcpIHtcclxuXHRcdFx0Ly9vcmRlciBoYXMgYmVlbiBleGVjdXRlZCwgd2UgYXJlIHdhaXRpbmcgb24gcmVzcG9uc2UgZnJvbSB0aGUgc3RvY2sgZXhjaGFuZ2VcclxuXHRcdFx0c2hvd1Byb2dyZXNzU3RlcCgnQnV5IG9yZGVyIGhhcyBiZWVuIGV4ZWN1dGVkLiBXZSB3aWxsIHVwZGF0ZSB5b3Ugd2hlbiBpdCBoYXMgYmVlbiBmaWxsZWQuJyArIGV0aExpbmssIDg0KVxyXG5cdFx0fSBlbHNlIGlmIChvYmplY3Quc3RhdHVzID09ICdvcmRlcl9maWxsZWQnKSB7XHJcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXktaW5mbycpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHRcdC8vb3JkZXIgaGFzIGJlZW4gZmlsbGVkLCB5b3UgZ290IG9iamVjdC5maWxsZWRRdHkgb2Ygc2hhcmVzLiBZb3Ugd2lsbCBzZWUgaXQgc29vbiBpbiB5b3VyIHdhbGxldFxyXG5cdFx0XHRzaG93UHJvZ3Jlc3NTdGVwKCdPcmRlciBoYXMgYmVlbiBmaWxsZWQsIHlvdSB3aWxsIHJlY2lldmUgJyArIG9iamVjdC5maWxsZWRRdHkgKyAnICcgKyBTeW1ib2wgKyAnIHNvb24gaW50byB5b3VyIHdhbGxldC4nICsgZXRoTGluaywgMTAwKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHNob3dQcm9ncmVzc1N0ZXAoJ1dhaXRpbmcgZm9yIGJsb2NrY2hhaW4gdG8gY29uZmlybSB0cmFuc2FjdGlvbi4nLCA5OSk7XHJcblx0XHR9XHJcblx0fSk7XHJcbn07XHJcblxyXG5cclxuY29uc3QgZ2V0T3JkZXJCdXlUYWJsZVByZWZpeCA9IGZ1bmN0aW9uKCkge1xyXG5cdGlmIChNYWluLk5ldHdvcmtJbmZvLkNoYWluSWQgPT0gNDMxMTMpIHJldHVybiBcIkZ1amlcIjtcclxuXHRyZXR1cm4gXCJcIjtcclxufTtcclxuXHJcbmNvbnN0IGNoZWNrVG9TaG93TWV0YW1hc2tJY29uID0gZnVuY3Rpb24odHh0IDogc3RyaW5nKSB7XHJcblx0Ly9XYWl0aW5nIG9uIGFwcHJvdmFsIHRvIGV4ZWN1dGVcclxuXHRpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1eV9wcm9ncmVzcycpLnN0eWxlLmRpc3BsYXkgIT0gXCJub25lXCIgJiYgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1eWluZ19zdGVwcycpLmlubmVyVGV4dC5pbmRleE9mKHR4dCkgIT0gLTEpIHtcclxuXHRcdHNob3dQcm9ncmVzc1N0ZXAoJ0hleSBIbyEgSXMgTWV0YW1hc2sgYmUgd2FpdGluZyBmb3IgeW91PzxiciAvPkNoZWNrIHRvcCByaWdodCBjb3JuZXIgb2YgeW91ciBicm93c2VyIDxpbWcgc3JjPVwiL2ltZy9tZXRhbWFzay1wZW5kaW5nLnBuZ1wiLz4nLCA5OSwgdHJ1ZSk7XHJcblx0fVxyXG5cclxuXHRzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgYmxvY2tzaGFpblNsb3dNZXNzYWdlKCk7IH0sIDggKiAxMDAwKVxyXG59XHJcblxyXG5jb25zdCBibG9ja3NoYWluU2xvd01lc3NhZ2UgPSBmdW5jdGlvbigpIHtcclxuXHJcblx0aWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXlfcHJvZ3Jlc3MnKS5zdHlsZS5kaXNwbGF5ICE9IFwibm9uZVwiICYmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXlpbmdfc3RlcHMnKS5pbm5lclRleHQuaW5kZXhPZignSGV5IEhvIScpICE9IC0xKSB7XHJcblx0XHRzaG93UHJvZ3Jlc3NTdGVwKCdJZiB5b3UgaGF2ZSBhbHJlYWR5IGFwcHJvdmVkLCBtYXliZSBibG9ja2NoYWluIGlzIHNsb3cuIExldHMgZ2l2ZSBpdCBhIGJpdC4gSnVzdCBkb3VibGUgY2hlY2sgZm9yIDxpbWcgc3JjPVwiL2ltZy9tZXRhbWFzay1wZW5kaW5nLnBuZ1wiLz4nLCA5OSwgdHJ1ZSk7XHJcblx0fVxyXG59O1xyXG5cclxuXHJcbmNvbnN0IGV4ZWN1dGVCdXkgPSBhc3luYyBmdW5jdGlvbihyZWNpcGllbnQgOiBzdHJpbmcsIGJ1eUFtb3VudCA6IG51bWJlcikge1xyXG5cdHRyeSB7XHJcblx0XHRjb25zdCBsaW1pbmFsT3B0aW9ucyA9IHtcclxuXHRcdFx0Y29udHJhY3RBZGRyZXNzOiBNYWluLkNvbnRyYWN0QWRkcmVzc2VzSW5mby5BVVNEX0FERFJFU1MsXHJcblx0XHRcdGZ1bmN0aW9uTmFtZTogXCJ0cmFuc2ZlclwiLFxyXG5cdFx0XHRhYmk6IEFVU0RJbmZvLmFiaSxcclxuXHRcdFx0cGFyYW1zOiB7XHJcblx0XHRcdFx0cmVjaXBpZW50OiByZWNpcGllbnQsXHJcblx0XHRcdFx0YW1vdW50OiBNb3JhbGlzLlVuaXRzLlRva2VuKGJ1eUFtb3VudCwgMTgpXHJcblx0XHRcdH0sXHJcblx0XHR9O1xyXG5cclxuXHRcdHJldHVybiBhd2FpdCBNb3JhbGlzLmV4ZWN1dGVGdW5jdGlvbihsaW1pbmFsT3B0aW9ucyk7XHJcblx0fSBjYXRjaCAoZXgpIHtcclxuXHRcdGNvbnNvbGUubG9nKGV4KTtcclxuXHRcdHJldHVybiBudWxsO1xyXG5cdH1cclxufTtcclxuXHJcbmNvbnN0IGV4ZWN1dGVDcmVhdGVUb2tlbiA9IGFzeW5jIGZ1bmN0aW9uKHN5bWJvbCA6IHN0cmluZykge1xyXG5cclxuXHRjb25zdCBsaW1pbmFsT3B0aW9ucyA9IHtcclxuXHRcdGNvbnRyYWN0QWRkcmVzczogTWFpbi5Db250cmFjdEFkZHJlc3Nlc0luZm8uTElNSU5BTF9NQVJLRVRfQUREUkVTUyxcclxuXHRcdGZ1bmN0aW9uTmFtZTogXCJjcmVhdGVUb2tlblwiLFxyXG5cdFx0YWJpOiBMaW1pbmFsTWFya2V0SW5mby5hYmksXHJcblx0XHRwYXJhbXM6IHtcclxuXHRcdFx0c3ltYm9sOiBzeW1ib2xcclxuXHRcdH0sXHJcblx0fTtcclxuXHJcblx0cmV0dXJuIGF3YWl0IE1vcmFsaXMuZXhlY3V0ZUZ1bmN0aW9uKGxpbWluYWxPcHRpb25zKTtcclxuXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgc2V0U2VsZWN0ZWRTeW1ib2xBbmRBZGRyZXNzID0gZnVuY3Rpb24oc3ltYm9sIDogc3RyaW5nLCBhZGRyZXNzIDogc3RyaW5nKSB7XHJcblx0U2VsZWN0ZWRTeW1ib2xBZGRyZXNzID0gYWRkcmVzcztcclxuXHRTeW1ib2wgPSBzeW1ib2w7XHJcblxyXG5cdGdldFN5bWJvbFByaWNlKCk7XHJcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/buy.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("70d8dbb27732c33d5aee")
/******/ })();
/******/ 
/******/ }
);