"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateliminal_app"]("main",{

/***/ "./src/modules/buy.ts":
/*!****************************!*\
  !*** ./src/modules/buy.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ExecuteTradeOffHoursTxt\": () => (/* binding */ ExecuteTradeOffHoursTxt),\n/* harmony export */   \"addTokenLinkBottom\": () => (/* binding */ addTokenLinkBottom),\n/* harmony export */   \"buyPageInit\": () => (/* binding */ buyPageInit),\n/* harmony export */   \"checkTokenValueVsBuyAmount\": () => (/* binding */ checkTokenValueVsBuyAmount),\n/* harmony export */   \"getSymbolContractAddress\": () => (/* binding */ getSymbolContractAddress),\n/* harmony export */   \"hideModalSecurities\": () => (/* binding */ hideModalSecurities),\n/* harmony export */   \"selectSymbol\": () => (/* binding */ selectSymbol),\n/* harmony export */   \"setSelectedSymbolAndAddress\": () => (/* binding */ setSelectedSymbolAndAddress),\n/* harmony export */   \"setupSteps\": () => (/* binding */ setupSteps),\n/* harmony export */   \"updateBuyInfo\": () => (/* binding */ updateBuyInfo)\n/* harmony export */ });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../main */ \"./src/main.ts\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ \"./src/modules/helper.ts\");\n/* harmony import */ var _kyc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kyc */ \"./src/modules/kyc.ts\");\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./render */ \"./src/modules/render.ts\");\n/* harmony import */ var _account__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./account */ \"./src/modules/account.ts\");\n/* harmony import */ var _networks_network_info__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../networks/network-info */ \"./src/networks/network-info.ts\");\n/* harmony import */ var _market__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./market */ \"./src/modules/market.ts\");\n/* harmony import */ var _securities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./securities */ \"./src/modules/securities.ts\");\n/* harmony import */ var moralis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! moralis */ \"./node_modules/moralis/index.js\");\n/* harmony import */ var moralis__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moralis__WEBPACK_IMPORTED_MODULE_8__);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet aUsdAmount;\r\nlet assetPrice = null;\r\nlet lastTraded = null;\r\nconst ExecuteTradeOffHoursTxt = 'Execute trade <div class=\"small_print\">It will take few hours to process, market is closed<br>You can enable \"Off hours trading\" in the Menu</div>';\r\nlet SelectedSymbolAddress = null;\r\nlet Symbol = '';\r\nlet LiminalMarketInfo;\r\nlet AUSDInfo;\r\nconst buyPageInit = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        history.pushState(null, 'Buy securities', '/buy');\r\n        document.getElementById('buy_amount').addEventListener('click', function (evt) {\r\n            updateBuyInfo(Symbol);\r\n        });\r\n        setupSteps();\r\n        setupAssets();\r\n        let response = yield fetch('../abi/LiminalMarket.json');\r\n        LiminalMarketInfo = yield response.json();\r\n        response = yield fetch('../abi/aUSD.json');\r\n        AUSDInfo = yield response.json();\r\n    });\r\n};\r\nconst selectSymbol = function (symbol, name, logo, address) {\r\n    buyPageInit();\r\n    if (!moralis__WEBPACK_IMPORTED_MODULE_8___default().Web3.isWeb3Enabled())\r\n        return;\r\n    setSelectedSymbolAndAddress(symbol, address);\r\n    let selectSymbolBtn = document.getElementById('select-symbol');\r\n    selectSymbolBtn.innerHTML = name + ' (' + symbol + ')';\r\n    updateBuyInfo(symbol, name, logo);\r\n};\r\nconst setupSteps = function (showNetwork) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        document.querySelectorAll('.step').forEach((value, key) => {\r\n            value.style.display = 'none';\r\n        });\r\n        console.log('moralis:', moralis__WEBPACK_IMPORTED_MODULE_8___default().isWeb3Enabled());\r\n        const isMetaMaskInstalled = (!(moralis__WEBPACK_IMPORTED_MODULE_8___default().isWeb3Enabled)) ? false : yield moralis__WEBPACK_IMPORTED_MODULE_8___default().isMetaMaskInstalled();\r\n        if (!isMetaMaskInstalled) {\r\n            document.getElementById('install_metamask').style.display = 'block';\r\n            return;\r\n        }\r\n        //todo: should check if address is null\r\n        if (false) {}\r\n        yield moralis__WEBPACK_IMPORTED_MODULE_8___default().enableWeb3();\r\n        const chainId = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().getChainId();\r\n        let networkInfo = (0,_networks_network_info__WEBPACK_IMPORTED_MODULE_5__.tryGetNetwork)(chainId);\r\n        if (networkInfo) {\r\n            _main__WEBPACK_IMPORTED_MODULE_0__.Main.NetworkInfo.setNetwork(networkInfo);\r\n        }\r\n        console.log('chains:', chainId, networkInfo.ChainId);\r\n        if (networkInfo.ChainId != chainId || showNetwork) {\r\n            document.getElementById('select_network').style.display = 'block';\r\n            if (window.location.href.indexOf('127.') != -1) {\r\n                document.getElementById('network_localhost').style.display = 'block';\r\n            }\r\n            const options = document.querySelectorAll('.network_chooser');\r\n            for (let i = 0; i < options.length; i++) {\r\n                options[i].addEventListener('click', function (evt) {\r\n                    return __awaiter(this, void 0, void 0, function* () {\r\n                        evt.preventDefault();\r\n                        console.log('chain id:', evt.target.dataset.chainid);\r\n                        try {\r\n                            const chainIdHex = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().switchNetwork(evt.target.dataset.chainid)\r\n                                .then(function () {\r\n                                return __awaiter(this, void 0, void 0, function* () {\r\n                                    yield moralis__WEBPACK_IMPORTED_MODULE_8___default().User.logOut();\r\n                                    window.location.reload();\r\n                                });\r\n                            }).catch(function (err) {\r\n                                addNetworkToWallet(evt.target.dataset.chainid);\r\n                                console.log(err);\r\n                            });\r\n                        }\r\n                        catch (e) {\r\n                            console.log(e);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            return;\r\n        }\r\n        if (moralis__WEBPACK_IMPORTED_MODULE_8___default().User.current() == null) {\r\n            //user is not logged in, lets log you in\r\n            document.getElementById('login_user').style.display = 'block';\r\n            document.getElementById('click_to_login_user').addEventListener('click', function (evt) {\r\n                evt.preventDefault();\r\n                (0,_account__WEBPACK_IMPORTED_MODULE_4__.login)(function () {\r\n                    setupSteps();\r\n                });\r\n                /*Moralis.authenticate().then(function (user) {\r\n                    setupSteps();\r\n                }).catch(function(err) {\r\n                    document.getElementById('login_user_error').style.display = 'block';\r\n                })*/\r\n            });\r\n            return;\r\n        }\r\n        yield (0,_kyc__WEBPACK_IMPORTED_MODULE_2__.KYCUserIsValid)();\r\n        console.log('IsValidKYC:', _kyc__WEBPACK_IMPORTED_MODULE_2__.IsValidKYC);\r\n        if (!_kyc__WEBPACK_IMPORTED_MODULE_2__.IsValidKYC) {\r\n            //user needs to do kyc\r\n            document.getElementById('kyc_registration').style.display = 'block';\r\n            document.getElementById('click_to_kyc_reg').addEventListener('click', function (evt) {\r\n                evt.preventDefault();\r\n                (0,_render__WEBPACK_IMPORTED_MODULE_3__.render)('kyc', null, _kyc__WEBPACK_IMPORTED_MODULE_2__.initKYC);\r\n            });\r\n            return;\r\n        }\r\n        aUsdAmount = yield getAUSDAmount();\r\n        if (aUsdAmount < 1) {\r\n            //show funding step\r\n            document.getElementById('fund_account').style.display = 'block';\r\n            document.getElementById('account_not_ready').style.display = \"none\";\r\n            document.getElementById('add_ausd_to_wallet').addEventListener('click', function (evt) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    evt.preventDefault();\r\n                    yield (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addTokenToWallet)(_main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.AUSD_ADDRESS, 'aUSD');\r\n                });\r\n            });\r\n            document.getElementById('fundUSDC').addEventListener('click', function (evt) {\r\n                evt.preventDefault();\r\n                //fund usdc\r\n                //transferUSDC();\r\n            });\r\n            document.getElementById('fundAUSD').addEventListener('click', function (evt) {\r\n                evt.preventDefault();\r\n                // fund ausd, moralis\r\n                fundUser();\r\n            });\r\n            return;\r\n        }\r\n        //lets buy securities\r\n        checkBalanceOfAUsd();\r\n    });\r\n};\r\nconst addNetworkToWallet = function (chainId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let networkInfo = (0,_networks_network_info__WEBPACK_IMPORTED_MODULE_5__.tryGetNetwork)(chainId);\r\n        const web3 = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().enableWeb3();\r\n        web3.provider.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{\r\n                    chainId: chainId,\r\n                    chainName: networkInfo.ChainName,\r\n                    nativeCurrency: {\r\n                        name: networkInfo.NativeCurrencyName,\r\n                        symbol: networkInfo.NativeSymbol,\r\n                        decimals: networkInfo.NativeDecimal\r\n                    },\r\n                    rpcUrls: [networkInfo.RpcUrl],\r\n                    blockExplorerUrls: [networkInfo.BlockExplorer]\r\n                }]\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    });\r\n};\r\nconst fundUser = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const params = {\r\n            chainId: _main__WEBPACK_IMPORTED_MODULE_0__.Main.NetworkInfo.ChainId\r\n        };\r\n        document.getElementById('account_not_ready').style.display = \"none\";\r\n        moralis__WEBPACK_IMPORTED_MODULE_8___default().Cloud.run('fundUser', params).then(function (response) {\r\n            showWaitingForFunding();\r\n            return;\r\n        }).catch(function (err) {\r\n            document.getElementById('account_not_ready').style.display = \"block\";\r\n        });\r\n    });\r\n};\r\nconst checkNativeTokenStatus = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const options = { chain: _main__WEBPACK_IMPORTED_MODULE_0__.Main.NetworkInfo.Name };\r\n        const result = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().Web3API.account.getNativeBalance(options);\r\n        //0.002998\r\n        const balance = parseFloat(moralis__WEBPACK_IMPORTED_MODULE_8___default().Units.FromWei(result.balance, 18));\r\n        if (SelectedSymbolAddress == _helper__WEBPACK_IMPORTED_MODULE_1__.AddressZero && balance < 0.005) {\r\n            showNeedNativeToken();\r\n        }\r\n        else if (balance < 0.0007) {\r\n            showNeedNativeToken();\r\n        }\r\n        else {\r\n            document.getElementById('need_native_token').style.display = 'none';\r\n        }\r\n    });\r\n};\r\nconst showNeedNativeToken = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const user = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().User.current();\r\n        document.getElementById('need_native_token').style.display = 'block';\r\n        document.getElementById('native_token_address').value = yield user.get('ethAddress');\r\n        setTimeout(checkNativeTokenStatus, 20 * 1000);\r\n    });\r\n};\r\nconst setupBuyButton = function () {\r\n    document.getElementById('execute-trade').classList.remove('disabled');\r\n    document.getElementById('execute-trade').classList.add('enabled');\r\n    if (_kyc__WEBPACK_IMPORTED_MODULE_2__.IsValidKYC) {\r\n        document.getElementById('execute-trade').onclick = transfer;\r\n    }\r\n    else {\r\n        const user = moralis__WEBPACK_IMPORTED_MODULE_8___default().User.current();\r\n        if (!user) {\r\n            document.getElementById('execute-trade').innerText = \"Login using Metamask\";\r\n            document.getElementById('execute-trade').onclick = function () {\r\n                (0,_account__WEBPACK_IMPORTED_MODULE_4__.login)(setupBuyButton);\r\n            };\r\n        }\r\n        else {\r\n            document.getElementById('execute-trade').innerText = 'You need to do (fake) KYC before buying';\r\n            document.getElementById('execute-trade').onclick = function () {\r\n                (0,_render__WEBPACK_IMPORTED_MODULE_3__.render)('kyc', null, _kyc__WEBPACK_IMPORTED_MODULE_2__.initKYC);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst showWaitingForFunding = function () {\r\n    document.getElementById('waiting_for_funding').style.display = 'block';\r\n    document.getElementById('buy_securities_wrapper').style.display = 'block';\r\n    document.getElementById('fund_account').style.display = 'none';\r\n    document.getElementById('buy_headline').innerHTML = \"Let's play... 🚀🚀🚀\";\r\n    let text = \"You currently have <strong>$\" + (0,_helper__WEBPACK_IMPORTED_MODULE_1__.roundNumber)(aUsdAmount) + \" aUSD</strong>.\"\r\n        + \" Lets try it anyway. Type in any amount in the box below and select a symbol.\"\r\n        + \" You will see how many shares you will get for that amount\";\r\n    document.getElementById('buy_text').innerHTML = text;\r\n    checkBalanceOfAUsd();\r\n};\r\nconst checkBalanceOfAUsd = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        aUsdAmount = yield getAUSDAmount();\r\n        if (aUsdAmount >= 1) {\r\n            document.getElementById('waiting_for_funding').style.display = 'none';\r\n            document.getElementById('buy_headline').innerHTML = \"Let's buy something!\";\r\n            let text = \"You currently have <strong>$\" + (0,_helper__WEBPACK_IMPORTED_MODULE_1__.roundNumber)(aUsdAmount) + \" aUSD.</strong>\"\r\n                + \" You can now buy your own securities.\";\r\n            document.getElementById('buy_text').innerHTML = text;\r\n            updateBuyInfo(Symbol);\r\n            showUseWalletForOrders();\r\n        }\r\n        else {\r\n            setTimeout(yield checkBalanceOfAUsd, 30 * 1000);\r\n        }\r\n    });\r\n};\r\nconst showUseWalletForOrders = function () {\r\n    document.getElementById('create-order').classList.add('sidebar');\r\n    document.getElementById('use_wallet_for_orders').style.display = 'inline-block';\r\n    document.getElementById('buy_securities_wrapper').style.display = 'inline-block';\r\n};\r\nconst getAUSDAmount = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const user = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().User.current();\r\n        if (!user)\r\n            return 0;\r\n        const ethAddress = yield user.get('ethAddress');\r\n        const ausdcOptions = {\r\n            contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.AUSD_ADDRESS,\r\n            functionName: \"balanceOf\",\r\n            abi: AUSDInfo.abi,\r\n            params: {\r\n                account: ethAddress\r\n            }\r\n        };\r\n        let amount = yield moralis__WEBPACK_IMPORTED_MODULE_8___default().executeFunction(ausdcOptions).then((balanceOf) => {\r\n            console.log('balanceOf obj:', balanceOf);\r\n            let amount = moralis__WEBPACK_IMPORTED_MODULE_8___default().Units.FromWei(balanceOf.value, 18);\r\n            document.getElementById('add_ausd_to_wallet_menu').innerHTML = 'You have ' + (0,_helper__WEBPACK_IMPORTED_MODULE_1__.roundNumber)(parseFloat(amount)) + ' aUSD in your broker account';\r\n            return amount;\r\n        }).catch(function (err) {\r\n            console.error(err);\r\n        });\r\n        return amount;\r\n    });\r\n};\r\nconst setupAssets = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        document.getElementById('select-symbol').addEventListener('click', function (evt) {\r\n            loadSecuritiesModal(evt);\r\n        });\r\n        document.getElementById('buy_amount').onchange = function () {\r\n            updateBuyInfo(Symbol);\r\n        };\r\n        document.getElementById('findSymbol').addEventListener('click', function (evt) {\r\n            loadSecuritiesModal(evt);\r\n        });\r\n    });\r\n};\r\nconst loadSecuritiesModal = function (evt) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        evt.preventDefault();\r\n        document.getElementById('modalSecurities').style.display = 'block';\r\n        document.getElementById('backdrop').style.display = 'block';\r\n        document.getElementById('modalSecurities').addEventListener('click', function (evt) {\r\n            console.log(evt.target.id);\r\n            if (evt.target.id == 'modalSecurities' || evt.target.id == 'closeModal') {\r\n                hideModalSecurities();\r\n            }\r\n        });\r\n        (0,_render__WEBPACK_IMPORTED_MODULE_3__.render)('securities', null, function () { (0,_securities__WEBPACK_IMPORTED_MODULE_7__.loadSecurities)(true); }, 'modal-body');\r\n    });\r\n};\r\nconst hideModalSecurities = function () {\r\n    document.getElementById('modalSecurities').style.display = 'none';\r\n    document.getElementById('backdrop').style.display = 'none';\r\n};\r\nconst getSymbolPrice = function (evt) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (evt) {\r\n            evt.preventDefault();\r\n        }\r\n        if (Symbol === '') {\r\n            assetPrice = 0;\r\n            lastTraded = '';\r\n            return;\r\n        }\r\n        offHoursInfo();\r\n        SelectedSymbolAddress = yield getSymbolContractAddress(Symbol);\r\n        console.log('contractAddresss:', SelectedSymbolAddress);\r\n        if (SelectedSymbolAddress == _helper__WEBPACK_IMPORTED_MODULE_1__.AddressZero) {\r\n            document.getElementById('execute-trade').innerHTML = \"Create token & execute trade\";\r\n            //TODO for sandbox lets not show this, but for live we need to show.\r\n            //document.getElementById('add-token-info').style.display='block';\r\n            //document.getElementById('add-token-info').innerHTML = \"<div >We will need to create the token when you buy it. Since you are the first one to buy this symbol, this will incure extra cost. It's a low cost</div>\";\r\n        }\r\n        else {\r\n            document.getElementById('execute-trade').innerHTML = \"Execute trade\";\r\n            addTokenLink(Symbol, SelectedSymbolAddress);\r\n        }\r\n        yield loadAssetPrice();\r\n        updateBuyInfo(Symbol);\r\n    });\r\n};\r\nconst loadAssetPrice = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const params = {\r\n            symbol: Symbol\r\n        };\r\n        return yield moralis__WEBPACK_IMPORTED_MODULE_8___default().Cloud.run(\"getSymbolPrice\", params).then(function (jsonResult) {\r\n            assetPrice = jsonResult.trade.p;\r\n            lastTraded = jsonResult.trade.t;\r\n        });\r\n    });\r\n};\r\nconst getSymbolContractAddress = function (symbol) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const securityTokenOptions = {\r\n            contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.LIMINAL_MARKET_ADDRESS,\r\n            functionName: \"getSecurityToken\",\r\n            abi: LiminalMarketInfo.abi,\r\n            params: {\r\n                symbol: symbol\r\n            }\r\n        };\r\n        return yield moralis__WEBPACK_IMPORTED_MODULE_8___default().executeFunction(securityTokenOptions);\r\n    });\r\n};\r\nconst offHoursInfo = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        yield (0,_market__WEBPACK_IMPORTED_MODULE_6__.isMarketOpen)();\r\n        if (!_market__WEBPACK_IMPORTED_MODULE_6__.IsMarketOpen && !_market__WEBPACK_IMPORTED_MODULE_6__.UserIsOffHours) {\r\n            document.getElementById('offHoursInfo').style.display = 'block';\r\n            document.getElementById('execute-trade').innerHTML = ExecuteTradeOffHoursTxt;\r\n        }\r\n        else {\r\n            document.getElementById('offHoursInfo').style.display = 'none';\r\n            document.getElementById('execute-trade').innerHTML = 'Execute trade';\r\n        }\r\n    });\r\n};\r\nconst addTokenLink = function (symbol, contractAddress) {\r\n    document.getElementById('add-token-info').style.display = 'none';\r\n};\r\nconst addTokenLinkBottom = function (symbol, contractAddress) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const asset = yield (0,_helper__WEBPACK_IMPORTED_MODULE_1__.getAssetBySymbol)(symbol);\r\n        document.getElementById('addNewTokenToWallet').style.display = 'block';\r\n        document.getElementById('tokenLogo').src = '/img/logos/' + asset.Logo;\r\n        document.getElementById('addNewTokenText').innerHTML = 'Add ' + symbol + ' to your wallet.';\r\n        document.getElementById('addNewToken').onclick = function (evt) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                evt.preventDefault();\r\n                yield (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addTokenToWallet)(contractAddress, symbol);\r\n            });\r\n        };\r\n    });\r\n};\r\nconst updateBuyInfo = function (symbol, name, logo) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (!symbol)\r\n            return;\r\n        let buyAmount = document.getElementById('buy_amount').value;\r\n        if (buyAmount === '' || assetPrice == null)\r\n            return;\r\n        document.getElementById('buy_success_message').style.display = 'none';\r\n        let str = 'Estimated you will buy ' + (0,_helper__WEBPACK_IMPORTED_MODULE_1__.roundNumber)(parseFloat(buyAmount) / assetPrice) + ' shares at the price of $' + assetPrice + ' per share. ';\r\n        str += 'Last trade was ' + (new Date(lastTraded)).toLocaleString();\r\n        if (SelectedSymbolAddress == _helper__WEBPACK_IMPORTED_MODULE_1__.AddressZero) {\r\n            str += '<br /><span class=\"small_print\">Since you are the first one to buy ' + symbol + \" you will be asked to create the token first, then we'll execute the trade</span>\";\r\n        }\r\n        document.getElementById('buy-info').innerHTML = str;\r\n        document.getElementById('buy-info').style.display = 'block';\r\n        checkTokenValueVsBuyAmount();\r\n    });\r\n};\r\nconst checkTokenValueVsBuyAmount = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        document.getElementById('buy_danger_message').style.display = 'none';\r\n        let buyAmount = document.getElementById('buy_amount').value;\r\n        var user = moralis__WEBPACK_IMPORTED_MODULE_8___default().User.current();\r\n        if (!user) {\r\n            document.getElementById('buy_danger_message').style.display = 'block';\r\n            let str = 'You are not logged in. Login in the menu at top.';\r\n            document.getElementById('buy_danger_message').innerHTML = str;\r\n            return false;\r\n        }\r\n        document.getElementById('execute-trade').classList.add('disabled');\r\n        document.getElementById('execute-trade').classList.remove('enabled');\r\n        if (aUsdAmount < buyAmount) {\r\n            document.getElementById('buy_danger_message').style.display = 'block';\r\n            document.getElementById('buy_danger_message').innerHTML = \"You don't have enough aUSD tokens in your wallet.\";\r\n            return false;\r\n        }\r\n        checkNativeTokenStatus();\r\n        yield setupBuyButton();\r\n    });\r\n};\r\nconst showProgressStep = function (text, perc, warning) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        document.getElementById('buy_progress').style.display = \"block\";\r\n        var element = document.getElementById('buying_steps');\r\n        element.innerHTML = '<div class=\"progress_text\">' + text + '</div>';\r\n        element.style.width = perc + '%';\r\n        element.classList.toggle('progress-bar-striped', (perc != 100));\r\n        element.classList.toggle('progress-bar-animated', (perc != 100));\r\n        if (warning) {\r\n            element.classList.add('bg-warning');\r\n            element.classList.add('progress_text_attn');\r\n        }\r\n        else {\r\n            element.classList.remove('bg-warning');\r\n            element.classList.remove('progress_text_attn');\r\n        }\r\n    });\r\n};\r\nconst hideProcessStep = function () {\r\n    document.getElementById('buy_progress').style.display = \"none\";\r\n    document.getElementById('execute-trade').style.display = 'block';\r\n};\r\nconst transfer = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const buyAmount = document.getElementById('buy_amount').value;\r\n        if (Symbol === '' || buyAmount === '')\r\n            return;\r\n        if (!checkTokenValueVsBuyAmount())\r\n            return false;\r\n        document.getElementById('execute-trade').style.display = 'none';\r\n        if (SelectedSymbolAddress == null) {\r\n            SelectedSymbolAddress = yield getSymbolContractAddress(Symbol);\r\n        }\r\n        if (SelectedSymbolAddress == _helper__WEBPACK_IMPORTED_MODULE_1__.AddressZero) {\r\n            showProgressStep('First we need to create token, you need to confirm', 99);\r\n            setTimeout(function () { checkToShowMetamaskIcon('First we need'); }, (10 * 1000));\r\n            let txResult = yield executeCreateToken(Symbol).catch(function (err) {\r\n                hideProcessStep();\r\n                return null;\r\n            });\r\n            if (txResult == null)\r\n                return;\r\n            console.log(txResult);\r\n            if (txResult.events.TokenCreated) {\r\n                SelectedSymbolAddress = txResult.events.TokenCreated.returnValues.tokenAddress;\r\n            }\r\n        }\r\n        console.log('recipent', SelectedSymbolAddress);\r\n        if (SelectedSymbolAddress == _helper__WEBPACK_IMPORTED_MODULE_1__.AddressZero)\r\n            return;\r\n        document.getElementById('execute-trade').innerHTML = \"Execute trade\";\r\n        let waitingStr = 'Waiting on approval to execute to buy ';\r\n        showProgressStep(waitingStr + Symbol + ' for $' + buyAmount + '.', 99);\r\n        setTimeout(function () { checkToShowMetamaskIcon(waitingStr); }, 10 * 1000);\r\n        yield subscribeToTable();\r\n        var buyResult = yield executeBuy(SelectedSymbolAddress, parseFloat(buyAmount));\r\n        if (buyResult == null) {\r\n            hideProcessStep();\r\n            return;\r\n        }\r\n        console.log('buyResult', buyResult);\r\n        document.getElementById('add-token-info').style.display = 'none';\r\n    });\r\n};\r\nconst subscribeToTable = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        console.log('subscribe to table:' + getOrderBuyTablePrefix() + 'OrderBuy');\r\n        let query = new (moralis__WEBPACK_IMPORTED_MODULE_8___default().Query)(getOrderBuyTablePrefix() + 'OrderBuy');\r\n        let subscription = yield query.subscribe();\r\n        subscription.on('update', (response) => {\r\n            const object = response.toJSON();\r\n            console.log('object updated', JSON.stringify(object), object);\r\n            let ethLink = ' <a class=\"white-link\" target=\"_blank\" href=\"https://rinkeby.etherscan.io/tx/' + object.transaction_hash + '\">View transaction</a>';\r\n            console.log('status:', object.status);\r\n            if (object.tokenAddress) {\r\n                addTokenLinkBottom(Symbol, SelectedSymbolAddress);\r\n            }\r\n            if ((!object.status && object.confirmed) || object.status == 'money_sent') {\r\n                showProgressStep('Blockchain has confirmed, money has been sent to broker.' + ethLink, 56);\r\n                //blockchain has confirmed, money will arrive soon to broker\r\n            }\r\n            else if (object.status == 'money_arrived') {\r\n                showProgressStep('Money has arrived, will now execute your buy order.' + ethLink, 70);\r\n                //money has arrived to broker, we will now execute your order\r\n            }\r\n            else if (object.status == 'order_requested') {\r\n                //order has been executed, we are waiting on response from the stock exchange\r\n                showProgressStep('Buy order has been executed. We will update you when it has been filled.' + ethLink, 84);\r\n            }\r\n            else if (object.status == 'order_filled') {\r\n                document.getElementById('buy-info').style.display = 'none';\r\n                //order has been filled, you got object.filledQty of shares. You will see it soon in your wallet\r\n                showProgressStep('Order has been filled, you will recieve ' + object.filledQty + ' ' + Symbol + ' soon into your wallet.' + ethLink, 100);\r\n            }\r\n            else {\r\n                showProgressStep('Waiting for blockchain to confirm transaction.', 99);\r\n            }\r\n        });\r\n    });\r\n};\r\nconst getOrderBuyTablePrefix = function () {\r\n    if (_main__WEBPACK_IMPORTED_MODULE_0__.Main.NetworkInfo.ChainId == 43113)\r\n        return \"Fuji\";\r\n    return \"\";\r\n};\r\nconst checkToShowMetamaskIcon = function (txt) {\r\n    //Waiting on approval to execute\r\n    if (document.getElementById('buy_progress').style.display != \"none\" && document.getElementById('buying_steps').innerText.indexOf(txt) != -1) {\r\n        showProgressStep('Hey Ho! Is Metamask be waiting for you?<br />Check top right corner of your browser <img src=\"/img/metamask-pending.png\"/>', 99, true);\r\n    }\r\n    setTimeout(function () { blockshainSlowMessage(); }, 8 * 1000);\r\n};\r\nconst blockshainSlowMessage = function () {\r\n    if (document.getElementById('buy_progress').style.display != \"none\" && document.getElementById('buying_steps').innerText.indexOf('Hey Ho!') != -1) {\r\n        showProgressStep('If you have already approved, maybe blockchain is slow. Lets give it a bit. Just double check for <img src=\"/img/metamask-pending.png\"/>', 99, true);\r\n    }\r\n};\r\nconst executeBuy = function (recipient, buyAmount) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const liminalOptions = {\r\n                contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.AUSD_ADDRESS,\r\n                functionName: \"transfer\",\r\n                abi: AUSDInfo.abi,\r\n                params: {\r\n                    recipient: recipient,\r\n                    amount: moralis__WEBPACK_IMPORTED_MODULE_8___default().Units.Token(buyAmount, 18)\r\n                },\r\n            };\r\n            return yield moralis__WEBPACK_IMPORTED_MODULE_8___default().executeFunction(liminalOptions);\r\n        }\r\n        catch (ex) {\r\n            console.log(ex);\r\n            return null;\r\n        }\r\n    });\r\n};\r\nconst executeCreateToken = function (symbol) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const liminalOptions = {\r\n            contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.LIMINAL_MARKET_ADDRESS,\r\n            functionName: \"createToken\",\r\n            abi: LiminalMarketInfo.abi,\r\n            params: {\r\n                symbol: symbol\r\n            },\r\n        };\r\n        return yield moralis__WEBPACK_IMPORTED_MODULE_8___default().executeFunction(liminalOptions);\r\n    });\r\n};\r\nconst setSelectedSymbolAndAddress = function (symbol, address) {\r\n    SelectedSymbolAddress = address;\r\n    Symbol = symbol;\r\n    getSymbolPrice();\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/buy.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("16d5215af4dae1627990")
/******/ })();
/******/ 
/******/ }
);