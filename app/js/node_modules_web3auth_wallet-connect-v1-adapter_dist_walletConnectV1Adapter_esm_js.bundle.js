(self.webpackChunkliminal_app=self.webpackChunkliminal_app||[]).push([["node_modules_web3auth_wallet-connect-v1-adapter_dist_walletConnectV1Adapter_esm_js","_da9b-_96ce-_a993-_7e2d-_2b6a"],{21357:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "WalletConnectV1Adapter": () => (/* binding */ WalletConnectV1Adapter)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4942);\n/* harmony import */ var _walletconnect_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(29409);\n/* harmony import */ var _web3auth_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(17291);\n/* harmony import */ var _web3auth_ethereum_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52062);\n/* harmony import */ var loglevel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2043);\n/* harmony import */ var loglevel__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(loglevel__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass WalletConnectV1Adapter extends _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .BaseAdapter */ .J5 {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "name", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.WALLET_CONNECT_V1 */ .rW.WALLET_CONNECT_V1);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "adapterNamespace", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_NAMESPACES.EIP155 */ .yk.EIP155);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "currentChainNamespace", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .CHAIN_NAMESPACES.EIP155 */ .EN.EIP155);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "type", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_CATEGORY.EXTERNAL */ .hN.EXTERNAL);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "adapterOptions", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "status", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.NOT_READY */ .MP.NOT_READY);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "adapterData", {\n      uri: ""\n    });\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "connector", null);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "wcProvider", null);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "rehydrated", false);\n\n    this.adapterOptions = _objectSpread({}, options);\n    this.chainConfig = options.chainConfig || null;\n  }\n\n  get connected() {\n    var _this$connector;\n\n    return !!((_this$connector = this.connector) !== null && _this$connector !== void 0 && _this$connector.connected);\n  }\n\n  get provider() {\n    var _this$wcProvider;\n\n    return ((_this$wcProvider = this.wcProvider) === null || _this$wcProvider === void 0 ? void 0 : _this$wcProvider.provider) || null;\n  }\n\n  set provider(_) {\n    throw new Error("Not implemented");\n  }\n\n  async init() {\n    super.checkInitializationRequirements();\n\n    if (!this.chainConfig) {\n      this.chainConfig = (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .getChainConfig */ .h2)(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .CHAIN_NAMESPACES.EIP155 */ .EN.EIP155, 1);\n    } // Create a connector\n\n\n    this.connector = this.getWalletConnectInstance();\n    this.wcProvider = new _web3auth_ethereum_provider__WEBPACK_IMPORTED_MODULE_2__.WalletConnectProvider({\n      config: {\n        chainConfig: this.chainConfig\n      }\n    });\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.READY */ .n2.READY, _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.WALLET_CONNECT_V1 */ .rW.WALLET_CONNECT_V1);\n    this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY;\n\n    if (this.connector.connected) {\n      this.rehydrated = true;\n      await this.onConnectHandler({\n        accounts: this.connector.accounts,\n        chainId: this.connector.chainId.toString()\n      });\n    }\n  }\n\n  async connect() {\n    super.checkConnectionRequirements();\n    if (!this.connector) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.notReady */ .Ty.notReady("Wallet adapter is not ready yet");\n\n    if (this.connected) {\n      await this.onConnectHandler({\n        accounts: this.connector.accounts,\n        chainId: this.connector.chainId.toString()\n      });\n      return this.provider;\n    }\n\n    if (this.status !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTING */ .MP.CONNECTING) {\n      var _this$adapterOptions$;\n\n      // for wallet connect qr code modal we have to create a new connector, coz wallet connect internally does not open\n      // modal again on existing instance if connection is pending.\n      if ((_this$adapterOptions$ = this.adapterOptions.adapterSettings) !== null && _this$adapterOptions$ !== void 0 && _this$adapterOptions$.qrcodeModal) {\n        this.connector = this.getWalletConnectInstance();\n      }\n\n      await this.createNewSession();\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTING */ .MP.CONNECTING;\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.CONNECTING */ .n2.CONNECTING, {\n        adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.WALLET_CONNECT_V1 */ .rW.WALLET_CONNECT_V1\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!this.connector) return reject(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.notReady */ .Ty.notReady("Wallet adapter is not ready yet")); // for wallet connect default modal.\n\n      this.connector.on("modal_closed", async () => {\n        this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY;\n        this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.READY */ .n2.READY, _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.WALLET_CONNECT_V1 */ .rW.WALLET_CONNECT_V1);\n        return reject(new Error("User closed modal"));\n      });\n\n      try {\n        // Subscribe to session connection\n        this.connector.on("connect", async (error, payload) => {\n          if (error) {\n            this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, error);\n          }\n\n          await this.onConnectHandler(payload.params[0]);\n          return resolve(this.provider);\n        });\n      } catch (error) {\n        loglevel__WEBPACK_IMPORTED_MODULE_3___default().error("Wallet connect v1 adapter error while connecting", error); // ready again to be connected\n\n        this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY;\n        this.rehydrated = true;\n        this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, error);\n        reject(error instanceof _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .Web3AuthError */ .up ? error : _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.connectionError */ .RM.connectionError("Failed to login with wallet connect: ".concat((error === null || error === void 0 ? void 0 : error.message) || "")));\n      }\n    });\n  }\n\n  async getUserInfo() {\n    if (!this.connected) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.notConnectedError */ .RM.notConnectedError("Not connected with wallet, Please login/connect first");\n    return {};\n  }\n\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    const {\n      cleanup\n    } = options;\n    if (!this.connector || !this.connected) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.notConnectedError */ .RM.notConnectedError("Not connected with wallet");\n    await this.connector.killSession();\n    this.rehydrated = false;\n\n    if (cleanup) {\n      this.connector = null;\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.NOT_READY */ .MP.NOT_READY;\n      this.wcProvider = null;\n    } else {\n      // ready to connect again\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY;\n    }\n\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.DISCONNECTED */ .n2.DISCONNECTED);\n  }\n\n  async createNewSession() {\n    var _this$adapterOptions, _this$adapterOptions$2;\n\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      forceNewSession: false\n    };\n    if (!this.connector) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.notReady */ .Ty.notReady("Wallet adapter is not ready yet");\n\n    if (opts.forceNewSession && this.connector.pending) {\n      await this.connector.killSession();\n    } // for wallet connect qr modal\n\n\n    if ((_this$adapterOptions = this.adapterOptions) !== null && _this$adapterOptions !== void 0 && (_this$adapterOptions$2 = _this$adapterOptions.adapterSettings) !== null && _this$adapterOptions$2 !== void 0 && _this$adapterOptions$2.qrcodeModal) {\n      var _this$chainConfig;\n\n      await this.connector.createSession({\n        chainId: parseInt(((_this$chainConfig = this.chainConfig) === null || _this$chainConfig === void 0 ? void 0 : _this$chainConfig.chainId) || "0x1", 16)\n      });\n      return;\n    } // for web3auth qr code modal\n\n\n    return new Promise((resolve, reject) => {\n      var _this$chainConfig2;\n\n      if (!this.connector) return reject(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.notReady */ .Ty.notReady("Wallet adapter is not ready yet"));\n      loglevel__WEBPACK_IMPORTED_MODULE_3___default().debug("creating new session for web3auth wallet connect");\n      this.connector.on("display_uri", async (err, payload) => {\n        var _this$connector2;\n\n        if (err) {\n          this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.connectionError */ .RM.connectionError("Failed to display wallet connect qr code"));\n          return reject(err);\n        }\n\n        const uri = payload.params[0];\n        this.updateAdapterData({\n          uri\n        });\n        (_this$connector2 = this.connector) === null || _this$connector2 === void 0 ? void 0 : _this$connector2.off("display_uri");\n        return resolve();\n      });\n      this.connector.createSession({\n        chainId: parseInt(((_this$chainConfig2 = this.chainConfig) === null || _this$chainConfig2 === void 0 ? void 0 : _this$chainConfig2.chainId) || "0x1", 16)\n      }).catch(error => {\n        loglevel__WEBPACK_IMPORTED_MODULE_3___default().error("error while creating new wallet connect session", error);\n        this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, error);\n        return reject(error);\n      });\n    });\n  }\n\n  async onConnectHandler(params) {\n    if (!this.connector || !this.wcProvider) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.notReady */ .Ty.notReady("Wallet adapter is not ready yet");\n    if (!this.chainConfig) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.invalidParams */ .Ty.invalidParams("Chain config is not set");\n    const {\n      chainId\n    } = params;\n    loglevel__WEBPACK_IMPORTED_MODULE_3___default().debug("connected chainId", chainId);\n    const connectedChainId = parseInt(chainId, (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .isHexStrict */ .H2)(chainId) ? 16 : 10);\n\n    if (connectedChainId !== parseInt(this.chainConfig.chainId, 16)) {\n      // we need to create a new session since old session is already used and\n      // user needs to login again with correct chain with new qr code.\n      await this.createNewSession({\n        forceNewSession: true\n      });\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.fromCode */ .Ty.fromCode(5000, "Not connected to correct chainId. Expected: ".concat(this.chainConfig.chainId, ", Current: ").concat(connectedChainId, ", Please switch to correct chain from wallet")));\n      return;\n    }\n\n    await this.wcProvider.setupProvider(this.connector);\n    this.subscribeEvents(this.connector);\n    this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED;\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.CONNECTED */ .n2.CONNECTED, {\n      adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.WALLET_CONNECT_V1 */ .rW.WALLET_CONNECT_V1,\n      reconnected: this.rehydrated\n    });\n  }\n\n  subscribeEvents(connector) {\n    connector.on("session_update", async error => {\n      if (error) {\n        this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, error);\n      }\n    });\n  }\n\n  getWalletConnectInstance() {\n    const walletConnectOptions = this.adapterOptions.adapterSettings || {};\n    walletConnectOptions.bridge = walletConnectOptions.bridge || "https://bridge.walletconnect.org"; // Create a connector\n\n    return new _walletconnect_client__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(walletConnectOptions);\n  }\n\n}\n\n\n//# sourceMappingURL=walletConnectV1Adapter.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21357\n')},62859:()=>{},75304:()=>{},32772:()=>{},64123:()=>{},29704:()=>{}}]);