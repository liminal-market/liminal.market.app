"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateliminal_app"]("main",{

/***/ "./src/modules/kyc.ts":
/*!****************************!*\
  !*** ./src/modules/kyc.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AlpacaId\": () => (/* binding */ AlpacaId),\n/* harmony export */   \"IsValidKYC\": () => (/* binding */ IsValidKYC),\n/* harmony export */   \"KYCUserIsValid\": () => (/* binding */ KYCUserIsValid),\n/* harmony export */   \"KYCUserToSmartContract\": () => (/* binding */ KYCUserToSmartContract),\n/* harmony export */   \"initKYC\": () => (/* binding */ initKYC)\n/* harmony export */ });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../main */ \"./src/main.ts\");\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render */ \"./src/modules/render.ts\");\n/* harmony import */ var _buy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./buy */ \"./src/modules/buy.ts\");\n/* harmony import */ var moralis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moralis */ \"./node_modules/moralis/index.js\");\n/* harmony import */ var moralis__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moralis__WEBPACK_IMPORTED_MODULE_3__);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nlet AlpacaId;\r\nlet KYCInfo;\r\nconst initKYC = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        AlpacaId = (yield moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current().fetch()).get('alpacaId');\r\n        AlpacaId = undefined;\r\n        console.log('alpacaId:', AlpacaId);\r\n        KYCInfo = getKYCInfo();\r\n        if (!AlpacaId) {\r\n            document.getElementById('kyc_reg').style.display = 'block';\r\n            document.getElementById('writeToBlockcahin').style.display = 'none';\r\n            document.getElementById('submitKYC').onclick = submitKYC;\r\n            loadName();\r\n        }\r\n        else {\r\n            showWriteToBlockchain();\r\n        }\r\n    });\r\n};\r\nconst loadName = function () {\r\n    var characters = [\r\n        { given_name: 'Leslie', family_name: 'Knope', email_address: 'leslie.knope' },\r\n        { given_name: 'April', family_name: 'Ludgate', email_address: 'april.ludgate' },\r\n        { given_name: 'Jerry', family_name: 'Gergich', email_address: 'jerry.gergich' },\r\n        { given_name: 'Tom', family_name: 'Haverford', email_address: 'tom.haverford' },\r\n        { given_name: 'Donna', family_name: 'Meagle', email_address: 'donna.meagle' },\r\n        { given_name: 'Andy', family_name: 'Dwyer', email_address: 'andy.dwyer' },\r\n        { given_name: 'Ann', family_name: 'Perkins', email_address: 'ann.perkins' },\r\n        { given_name: 'Ben', family_name: 'Wyatt', email_address: 'ben.wyatt' },\r\n        { given_name: 'Chris', family_name: 'Traeger', email_address: 'chris.traeger' },\r\n        { given_name: 'Jean-Ralphio', family_name: 'Saperstein', email_address: 'jean-ralphio.saperstein' },\r\n        { given_name: 'Councilman', family_name: 'Jamm', email_address: 'jamm' }\r\n    ];\r\n    let idx = Math.floor(Math.random() * characters.length) % characters.length;\r\n    var character = characters[idx];\r\n    document.getElementById('given_name').value = character.given_name;\r\n    document.getElementById('family_name').value = character.family_name;\r\n    document.getElementById('email_address').value = character.email_address + '.' + (new Date().getTime()) + '@parks-and-rec-example.com';\r\n};\r\nconst submitKYC = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        showProgressStep('Register KYC with broker', 33);\r\n        const form = document.getElementById('kyc_wizard_form');\r\n        let data = new FormData(form);\r\n        let params = serialize(data);\r\n        AlpacaId = yield moralis__WEBPACK_IMPORTED_MODULE_3___default().Cloud.run(\"kycRegistration\", params);\r\n        let user = moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current();\r\n        user.set('alpacaId', AlpacaId);\r\n        user.save();\r\n        KYCUserToSmartContract(AlpacaId);\r\n        return false;\r\n    });\r\n};\r\nconst showProgressStep = function (text, perc, warning) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        document.getElementById('btnWriteToBlockchain').style.display = \"none\";\r\n        document.getElementById('submitKYC').style.display = \"none\";\r\n        document.getElementById('kyc_progress').style.display = \"block\";\r\n        var element = document.getElementById('kyc_steps');\r\n        element.innerHTML = '<div class=\"progress_text\">' + text + '</div>';\r\n        element.style.width = perc + '%';\r\n        element.classList.toggle('progress-bar-striped', (perc != 100));\r\n        element.classList.toggle('progress-bar-animated', (perc != 100));\r\n        if (warning) {\r\n            element.classList.add('bg-warning');\r\n            element.classList.add('progress_text_attn');\r\n        }\r\n        else {\r\n            element.classList.remove('bg-warning');\r\n            element.classList.remove('progress_text_attn');\r\n        }\r\n    });\r\n};\r\nconst isValidAccountId = function (str) {\r\n    const regex = new RegExp('^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$');\r\n    return regex.test(str);\r\n};\r\nconst KYCUserToSmartContract = function (accountId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (!isValidAccountId(accountId)) {\r\n            showProgressStep('Your account id was invalid. This should not happen, <a href=\"https://discord.gg/ePs5cRceNB\" target=\"_blank\">ping us on Discord</a>', 100, true);\r\n            return;\r\n        }\r\n        const str = 'Writing to blockchain, you must confirm transaction in your wallet';\r\n        showProgressStep(str, 66);\r\n        setTimeout(function () { checkToShowMetamaskIcon(str); }, 10 * 1000);\r\n        const kycOptions = {\r\n            contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.KYC_ADDRESS,\r\n            functionName: \"validateAccount\",\r\n            abi: KYCInfo.abi,\r\n            params: {\r\n                accountId: accountId\r\n            },\r\n        };\r\n        yield moralis__WEBPACK_IMPORTED_MODULE_3___default().executeFunction(kycOptions).then((result) => __awaiter(this, void 0, void 0, function* () {\r\n            console.log('KYCUserToSmartContract result', result);\r\n            IsValidKYC = true;\r\n            showProgressStep('Done, loading buy page...', 100);\r\n            (0,_render__WEBPACK_IMPORTED_MODULE_1__.render)('buy', null, _buy__WEBPACK_IMPORTED_MODULE_2__.buyPageInit);\r\n        })).catch(function (err) {\r\n            console.log(err);\r\n            showWriteToBlockchain();\r\n        });\r\n        console.log('writing to blockcahin', kycOptions);\r\n    });\r\n};\r\nconst checkToShowMetamaskIcon = function (txt) {\r\n    //Waiting on approval to execute\r\n    if (document.getElementById('kyc_progress') && document.getElementById('kyc_progress').style.display != \"none\" && document.getElementById('kyc_steps').innerText.indexOf(txt) != -1) {\r\n        showProgressStep('Hey Ho! Is Metamask be waiting for you?<br />Check top right corner of your browser <img src=\"/img/metamask-pending.png\"/>', 99, true);\r\n        setTimeout(function () { blockshainSlowMessage(); }, 8 * 1000);\r\n    }\r\n};\r\nconst blockshainSlowMessage = function () {\r\n    if (document.getElementById('kyc_progress') && document.getElementById('kyc_progress').style.display != \"none\" && document.getElementById('kyc_steps').innerText.indexOf('Hey Ho!') != -1) {\r\n        showProgressStep('If you have already approved, maybe blockchain is slow. Lets give it a bit. Just double check for <img src=\"/img/metamask-pending.png\"/>', 99, true);\r\n    }\r\n};\r\nconst showWriteToBlockchain = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const user = yield moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current();\r\n        document.getElementById('need_native_token').style.display = 'block';\r\n        document.getElementById('native_token_address').value = yield user.get('ethAddress');\r\n        document.getElementById('btnWriteToBlockchain').style.display = \"block\";\r\n        document.getElementById('submitKYC').style.display = \"block\";\r\n        document.getElementById('kyc_progress').style.display = 'none';\r\n        document.getElementById('kyc_reg').style.display = 'none';\r\n        document.getElementById('writeToBlockcahin').style.display = 'block';\r\n        document.getElementById('btnWriteToBlockchain').addEventListener('click', function (evt) {\r\n            evt.preventDefault();\r\n            KYCUserToSmartContract(AlpacaId);\r\n        });\r\n    });\r\n};\r\nfunction serialize(data) {\r\n    let obj = {};\r\n    for (let [key, value] of data) {\r\n        if (obj[key] !== undefined) {\r\n            if (!Array.isArray(obj[key])) {\r\n                obj[key] = [obj[key]];\r\n            }\r\n            obj[key].push(value);\r\n        }\r\n        else {\r\n            obj[key] = value;\r\n        }\r\n    }\r\n    return obj;\r\n}\r\nlet IsValidKYC = false;\r\nconst KYCUserIsValid = function () {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (IsValidKYC)\r\n            return true;\r\n        const kycOptions = {\r\n            contractAddress: _main__WEBPACK_IMPORTED_MODULE_0__.Main.ContractAddressesInfo.KYC_ADDRESS,\r\n            functionName: \"isValid\",\r\n            abi: KYCInfo.abi,\r\n            params: {\r\n                userAddress: moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current().get('ethAddress')\r\n            }\r\n        };\r\n        yield moralis__WEBPACK_IMPORTED_MODULE_3___default().executeFunction(kycOptions).then((result) => __awaiter(this, void 0, void 0, function* () {\r\n            console.log('kyc result:', result);\r\n            //todo: make sure result.value is correct\r\n            if (isValidAccountId(result.value)) {\r\n                IsValidKYC = true;\r\n                var user = moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current();\r\n                if (!user.get('alpacaId')) {\r\n                    user.save({ alpacaId: result });\r\n                    yield moralis__WEBPACK_IMPORTED_MODULE_3___default().User.current().fetch();\r\n                }\r\n                return;\r\n            }\r\n        })).catch(function (err) {\r\n            console.log('Not KYC valid', err);\r\n        });\r\n    });\r\n};\r\nfunction getKYCInfo() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (KYCInfo != null)\r\n            return KYCInfo;\r\n        const response = yield fetch(\"../abi/KYC.json\");\r\n        KYCInfo = yield response.json();\r\n        return KYCInfo;\r\n    });\r\n}\r\ninitKYC();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T0FBTyxDQUFDO0lBQ2hCLENBQUM7Q0FBQTtBQUVELE9BQU8sRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGltaW5hbC1hcHAvLi9zcmMvbW9kdWxlcy9reWMudHM/Nzc1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYWluIH0gIGZyb20gJy4uL21haW4nO1xyXG5cclxuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcIi4vcmVuZGVyXCI7XHJcbmltcG9ydCB7YnV5UGFnZUluaXR9IGZyb20gJy4vYnV5JztcclxuaW1wb3J0IE1vcmFsaXMgZnJvbSAnbW9yYWxpcyc7XHJcblxyXG5leHBvcnQgbGV0IEFscGFjYUlkO1xyXG5sZXQgS1lDSW5mbyA6IGFueTtcclxuXHJcbmV4cG9ydCBjb25zdCBpbml0S1lDID0gYXN5bmMgZnVuY3Rpb24gKCkge1xyXG5cdEFscGFjYUlkID0gKGF3YWl0IE1vcmFsaXMuVXNlci5jdXJyZW50KCkuZmV0Y2goKSkuZ2V0KCdhbHBhY2FJZCcpO1xyXG5cdEFscGFjYUlkID0gdW5kZWZpbmVkO1xyXG5cdGNvbnNvbGUubG9nKCdhbHBhY2FJZDonLCBBbHBhY2FJZCk7XHJcblx0S1lDSW5mbyA9IGdldEtZQ0luZm8oKTtcclxuXHJcblx0aWYgKCFBbHBhY2FJZCkge1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t5Y19yZWcnKS5zdHlsZS5kaXNwbGF5PSdibG9jayc7XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd3JpdGVUb0Jsb2NrY2FoaW4nKS5zdHlsZS5kaXNwbGF5PSdub25lJztcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJtaXRLWUMnKS5vbmNsaWNrID0gc3VibWl0S1lDO1xyXG5cclxuXHRcdGxvYWROYW1lKCk7XHJcblxyXG5cdH0gZWxzZSB7XHJcblx0XHRzaG93V3JpdGVUb0Jsb2NrY2hhaW4oKTtcclxuXHR9XHJcbn1cclxuXHJcblxyXG5cclxuY29uc3QgbG9hZE5hbWUgPSBmdW5jdGlvbigpIHtcclxuXHR2YXIgY2hhcmFjdGVycyA9IFtcclxuXHRcdHtnaXZlbl9uYW1lIDogJ0xlc2xpZScsIGZhbWlseV9uYW1lIDogJ0tub3BlJywgZW1haWxfYWRkcmVzczonbGVzbGllLmtub3BlJyB9LFxyXG5cdFx0e2dpdmVuX25hbWUgOiAnQXByaWwnLCBmYW1pbHlfbmFtZSA6ICdMdWRnYXRlJywgZW1haWxfYWRkcmVzczonYXByaWwubHVkZ2F0ZScgfSxcclxuXHRcdHtnaXZlbl9uYW1lIDogJ0plcnJ5JywgZmFtaWx5X25hbWUgOiAnR2VyZ2ljaCcsIGVtYWlsX2FkZHJlc3M6J2plcnJ5LmdlcmdpY2gnIH0sXHJcblx0XHR7Z2l2ZW5fbmFtZSA6ICdUb20nLCBmYW1pbHlfbmFtZSA6ICdIYXZlcmZvcmQnLCBlbWFpbF9hZGRyZXNzOid0b20uaGF2ZXJmb3JkJyB9LFxyXG5cdFx0e2dpdmVuX25hbWUgOiAnRG9ubmEnLCBmYW1pbHlfbmFtZSA6ICdNZWFnbGUnLCBlbWFpbF9hZGRyZXNzOidkb25uYS5tZWFnbGUnIH0sXHJcblx0XHR7Z2l2ZW5fbmFtZSA6ICdBbmR5JywgZmFtaWx5X25hbWUgOiAnRHd5ZXInLCBlbWFpbF9hZGRyZXNzOidhbmR5LmR3eWVyJyB9LFxyXG5cdFx0e2dpdmVuX25hbWUgOiAnQW5uJywgZmFtaWx5X25hbWUgOiAnUGVya2lucycsIGVtYWlsX2FkZHJlc3M6J2Fubi5wZXJraW5zJyB9LFxyXG5cdFx0e2dpdmVuX25hbWUgOiAnQmVuJywgZmFtaWx5X25hbWUgOiAnV3lhdHQnLCBlbWFpbF9hZGRyZXNzOidiZW4ud3lhdHQnIH0sXHJcblx0XHR7Z2l2ZW5fbmFtZSA6ICdDaHJpcycsIGZhbWlseV9uYW1lIDogJ1RyYWVnZXInLCBlbWFpbF9hZGRyZXNzOidjaHJpcy50cmFlZ2VyJyB9LFxyXG5cdFx0e2dpdmVuX25hbWUgOiAnSmVhbi1SYWxwaGlvJywgZmFtaWx5X25hbWUgOiAnU2FwZXJzdGVpbicsIGVtYWlsX2FkZHJlc3M6J2plYW4tcmFscGhpby5zYXBlcnN0ZWluJyB9LFxyXG5cdFx0e2dpdmVuX25hbWUgOiAnQ291bmNpbG1hbicsIGZhbWlseV9uYW1lIDogJ0phbW0nLCBlbWFpbF9hZGRyZXNzOidqYW1tJyB9XHJcblx0XVxyXG5cclxuXHRsZXQgaWR4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcmFjdGVycy5sZW5ndGgpICUgY2hhcmFjdGVycy5sZW5ndGg7XHJcblx0dmFyIGNoYXJhY3RlciA9IGNoYXJhY3RlcnNbaWR4XTtcclxuXHQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dpdmVuX25hbWUnKSBhcyBIVE1MSW5wdXRFbGVtZW50KS52YWx1ZSA9IGNoYXJhY3Rlci5naXZlbl9uYW1lO1xyXG5cdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmFtaWx5X25hbWUnKSBhcyBIVE1MSW5wdXRFbGVtZW50KS52YWx1ZSA9IGNoYXJhY3Rlci5mYW1pbHlfbmFtZTtcclxuXHQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VtYWlsX2FkZHJlc3MnKSBhcyBIVE1MSW5wdXRFbGVtZW50KS52YWx1ZSA9IGNoYXJhY3Rlci5lbWFpbF9hZGRyZXNzICsgJy4nICsgKG5ldyBEYXRlKCkuZ2V0VGltZSgpKSArICdAcGFya3MtYW5kLXJlYy1leGFtcGxlLmNvbSc7XHJcblxyXG59XHJcblxyXG5cclxuY29uc3Qgc3VibWl0S1lDID0gYXN5bmMgZnVuY3Rpb24gKCkge1xyXG5cdHNob3dQcm9ncmVzc1N0ZXAoJ1JlZ2lzdGVyIEtZQyB3aXRoIGJyb2tlcicsIDMzKTtcclxuXHRjb25zdCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t5Y193aXphcmRfZm9ybScpIGFzIEhUTUxGb3JtRWxlbWVudDtcclxuXHRsZXQgZGF0YSA9IG5ldyBGb3JtRGF0YShmb3JtKTtcclxuXHJcblx0bGV0IHBhcmFtcyA9IHNlcmlhbGl6ZShkYXRhKTtcclxuXHJcblx0QWxwYWNhSWQgPSBhd2FpdCBNb3JhbGlzLkNsb3VkLnJ1bihcImt5Y1JlZ2lzdHJhdGlvblwiLCBwYXJhbXMpO1xyXG5cclxuXHRsZXQgdXNlciA9IE1vcmFsaXMuVXNlci5jdXJyZW50KCk7XHJcblx0dXNlci5zZXQoJ2FscGFjYUlkJywgQWxwYWNhSWQpO1xyXG5cdHVzZXIuc2F2ZSgpO1xyXG5cclxuXHRLWUNVc2VyVG9TbWFydENvbnRyYWN0KEFscGFjYUlkKTtcclxuXHRyZXR1cm4gZmFsc2U7XHJcbn1cclxuY29uc3Qgc2hvd1Byb2dyZXNzU3RlcCA9IGFzeW5jIGZ1bmN0aW9uICh0ZXh0IDogc3RyaW5nLCBwZXJjIDogbnVtYmVyLCB3YXJuaW5nPyA6IGJvb2xlYW4pIHtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRuV3JpdGVUb0Jsb2NrY2hhaW4nKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1Ym1pdEtZQycpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3ljX3Byb2dyZXNzJykuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuXHR2YXIgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdreWNfc3RlcHMnKTtcclxuXHRlbGVtZW50LmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPVwicHJvZ3Jlc3NfdGV4dFwiPicgKyB0ZXh0ICsgJzwvZGl2Pic7XHJcblx0ZWxlbWVudC5zdHlsZS53aWR0aCA9IHBlcmMgKyAnJSc7XHJcblxyXG5cdGVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgncHJvZ3Jlc3MtYmFyLXN0cmlwZWQnLCAocGVyYyAhPSAxMDApKTtcclxuXHRlbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoJ3Byb2dyZXNzLWJhci1hbmltYXRlZCcsIChwZXJjICE9IDEwMCkpO1xyXG5cdGlmICh3YXJuaW5nKSB7XHJcblx0XHRlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2JnLXdhcm5pbmcnKTtcclxuXHRcdGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncHJvZ3Jlc3NfdGV4dF9hdHRuJyk7XHJcblx0fSBlbHNlIHtcclxuXHRcdGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnYmctd2FybmluZycpO1xyXG5cdFx0ZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdwcm9ncmVzc190ZXh0X2F0dG4nKTtcclxuXHR9XHJcblxyXG59XHJcblxyXG5jb25zdCBpc1ZhbGlkQWNjb3VudElkID0gZnVuY3Rpb24oc3RyIDogc3RyaW5nKSB7XHJcblx0Y29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKCdeWzAtOWEtZl17OH0tWzAtOWEtZl17NH0tWzAtNV1bMC05YS1mXXszfS1bMDg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9JCcpO1xyXG5cdHJldHVybiByZWdleC50ZXN0KHN0cik7XHJcbn1cclxuXHJcblxyXG5leHBvcnQgY29uc3QgS1lDVXNlclRvU21hcnRDb250cmFjdCA9IGFzeW5jIGZ1bmN0aW9uIChhY2NvdW50SWQgOiBzdHJpbmcpIHtcclxuXHRpZiAoIWlzVmFsaWRBY2NvdW50SWQoYWNjb3VudElkKSkge1xyXG5cdFx0c2hvd1Byb2dyZXNzU3RlcCgnWW91ciBhY2NvdW50IGlkIHdhcyBpbnZhbGlkLiBUaGlzIHNob3VsZCBub3QgaGFwcGVuLCA8YSBocmVmPVwiaHR0cHM6Ly9kaXNjb3JkLmdnL2VQczVjUmNlTkJcIiB0YXJnZXQ9XCJfYmxhbmtcIj5waW5nIHVzIG9uIERpc2NvcmQ8L2E+JywgMTAwLCB0cnVlKTtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHN0ciA9ICdXcml0aW5nIHRvIGJsb2NrY2hhaW4sIHlvdSBtdXN0IGNvbmZpcm0gdHJhbnNhY3Rpb24gaW4geW91ciB3YWxsZXQnO1xyXG5cclxuXHJcblxyXG5cdHNob3dQcm9ncmVzc1N0ZXAoc3RyLCA2Nik7XHJcblx0c2V0VGltZW91dChmdW5jdGlvbiAoKSB7IGNoZWNrVG9TaG93TWV0YW1hc2tJY29uKHN0cikgfSwgMTAgKiAxMDAwKVxyXG5cdGNvbnN0IGt5Y09wdGlvbnMgPSB7XHJcblx0XHRjb250cmFjdEFkZHJlc3M6IE1haW4uQ29udHJhY3RBZGRyZXNzZXNJbmZvLktZQ19BRERSRVNTLFxyXG5cdFx0ZnVuY3Rpb25OYW1lOiBcInZhbGlkYXRlQWNjb3VudFwiLFxyXG5cdFx0YWJpOiBLWUNJbmZvLmFiaSxcclxuXHRcdHBhcmFtczoge1xyXG5cdFx0XHRhY2NvdW50SWQ6IGFjY291bnRJZFxyXG5cdFx0fSxcclxuXHR9O1xyXG5cclxuXHRhd2FpdCBNb3JhbGlzLmV4ZWN1dGVGdW5jdGlvbihreWNPcHRpb25zKS50aGVuKGFzeW5jIChyZXN1bHQpID0+IHtcclxuXHRcdGNvbnNvbGUubG9nKCdLWUNVc2VyVG9TbWFydENvbnRyYWN0IHJlc3VsdCcsIHJlc3VsdCk7XHJcblx0XHRJc1ZhbGlkS1lDID0gdHJ1ZTtcclxuXHRcdHNob3dQcm9ncmVzc1N0ZXAoJ0RvbmUsIGxvYWRpbmcgYnV5IHBhZ2UuLi4nLCAxMDApO1xyXG5cclxuXHRcdHJlbmRlcignYnV5JywgbnVsbCwgYnV5UGFnZUluaXQpO1xyXG5cdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdHNob3dXcml0ZVRvQmxvY2tjaGFpbigpO1xyXG5cdH0pO1xyXG5cclxuXHRjb25zb2xlLmxvZygnd3JpdGluZyB0byBibG9ja2NhaGluJywga3ljT3B0aW9ucyk7XHJcbn1cclxuXHJcblxyXG5jb25zdCBjaGVja1RvU2hvd01ldGFtYXNrSWNvbiA9IGZ1bmN0aW9uKHR4dCkge1xyXG5cdC8vV2FpdGluZyBvbiBhcHByb3ZhbCB0byBleGVjdXRlXHJcblx0aWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdreWNfcHJvZ3Jlc3MnKSAmJiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3ljX3Byb2dyZXNzJykuc3R5bGUuZGlzcGxheSAhPSBcIm5vbmVcIiAmJiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3ljX3N0ZXBzJykuaW5uZXJUZXh0LmluZGV4T2YodHh0KSAhPSAtMSkge1xyXG5cdFx0c2hvd1Byb2dyZXNzU3RlcCgnSGV5IEhvISBJcyBNZXRhbWFzayBiZSB3YWl0aW5nIGZvciB5b3U/PGJyIC8+Q2hlY2sgdG9wIHJpZ2h0IGNvcm5lciBvZiB5b3VyIGJyb3dzZXIgPGltZyBzcmM9XCIvaW1nL21ldGFtYXNrLXBlbmRpbmcucG5nXCIvPicsIDk5LCB0cnVlKTtcclxuXHRcdHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBibG9ja3NoYWluU2xvd01lc3NhZ2UoKTsgfSwgOCAqIDEwMDApO1xyXG5cdH1cclxufTtcclxuXHJcbmNvbnN0IGJsb2Nrc2hhaW5TbG93TWVzc2FnZSA9IGZ1bmN0aW9uKCkge1xyXG5cclxuXHRpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t5Y19wcm9ncmVzcycpICYmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdreWNfcHJvZ3Jlc3MnKS5zdHlsZS5kaXNwbGF5ICE9IFwibm9uZVwiICYmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdreWNfc3RlcHMnKS5pbm5lclRleHQuaW5kZXhPZignSGV5IEhvIScpICE9IC0xKSB7XHJcblx0XHRzaG93UHJvZ3Jlc3NTdGVwKCdJZiB5b3UgaGF2ZSBhbHJlYWR5IGFwcHJvdmVkLCBtYXliZSBibG9ja2NoYWluIGlzIHNsb3cuIExldHMgZ2l2ZSBpdCBhIGJpdC4gSnVzdCBkb3VibGUgY2hlY2sgZm9yIDxpbWcgc3JjPVwiL2ltZy9tZXRhbWFzay1wZW5kaW5nLnBuZ1wiLz4nLCA5OSwgdHJ1ZSk7XHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBzaG93V3JpdGVUb0Jsb2NrY2hhaW4gPSBhc3luYyBmdW5jdGlvbigpIHtcclxuXHRjb25zdCB1c2VyID0gYXdhaXQgTW9yYWxpcy5Vc2VyLmN1cnJlbnQoKTtcclxuXHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25lZWRfbmF0aXZlX3Rva2VuJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblx0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduYXRpdmVfdG9rZW5fYWRkcmVzcycpIGFzIEhUTUxJbnB1dEVsZW1lbnQpLnZhbHVlID0gYXdhaXQgdXNlci5nZXQoJ2V0aEFkZHJlc3MnKTtcclxuXHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0bldyaXRlVG9CbG9ja2NoYWluJykuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VibWl0S1lDJykuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3ljX3Byb2dyZXNzJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3ljX3JlZycpLnN0eWxlLmRpc3BsYXk9J25vbmUnO1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3cml0ZVRvQmxvY2tjYWhpbicpLnN0eWxlLmRpc3BsYXk9J2Jsb2NrJztcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRuV3JpdGVUb0Jsb2NrY2hhaW4nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2dCkge1xyXG5cdFx0ZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdFx0S1lDVXNlclRvU21hcnRDb250cmFjdChBbHBhY2FJZCk7XHJcblx0fSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNlcmlhbGl6ZShkYXRhKSB7XHJcblx0bGV0IG9iaiA9IHt9O1xyXG5cdGZvciAobGV0IFtrZXksIHZhbHVlXSBvZiBkYXRhKSB7XHJcblx0XHRpZiAob2JqW2tleV0gIT09IHVuZGVmaW5lZCkge1xyXG5cdFx0XHRpZiAoIUFycmF5LmlzQXJyYXkob2JqW2tleV0pKSB7XHJcblx0XHRcdFx0b2JqW2tleV0gPSBbb2JqW2tleV1dO1xyXG5cdFx0XHR9XHJcblx0XHRcdG9ialtrZXldLnB1c2godmFsdWUpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0b2JqW2tleV0gPSB2YWx1ZTtcclxuXHRcdH1cclxuXHR9XHJcblx0cmV0dXJuIG9iajtcclxufVxyXG5cclxuXHJcbmV4cG9ydCBsZXQgSXNWYWxpZEtZQyA9IGZhbHNlO1xyXG5cclxuZXhwb3J0IGNvbnN0IEtZQ1VzZXJJc1ZhbGlkID0gYXN5bmMgZnVuY3Rpb24gKCkge1xyXG5cdGlmIChJc1ZhbGlkS1lDKSByZXR1cm4gdHJ1ZTtcclxuXHJcblx0Y29uc3Qga3ljT3B0aW9ucyA9IHtcclxuXHRcdGNvbnRyYWN0QWRkcmVzczogTWFpbi5Db250cmFjdEFkZHJlc3Nlc0luZm8uS1lDX0FERFJFU1MsXHJcblx0XHRmdW5jdGlvbk5hbWU6IFwiaXNWYWxpZFwiLFxyXG5cdFx0YWJpOiBLWUNJbmZvLmFiaSxcclxuXHRcdHBhcmFtczoge1xyXG5cdFx0XHR1c2VyQWRkcmVzczogTW9yYWxpcy5Vc2VyLmN1cnJlbnQoKS5nZXQoJ2V0aEFkZHJlc3MnKVxyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdGF3YWl0IE1vcmFsaXMuZXhlY3V0ZUZ1bmN0aW9uKGt5Y09wdGlvbnMpLnRoZW4oYXN5bmMgKHJlc3VsdCkgPT4ge1xyXG5cdFx0Y29uc29sZS5sb2coJ2t5YyByZXN1bHQ6JywgcmVzdWx0KTtcclxuXHRcdC8vdG9kbzogbWFrZSBzdXJlIHJlc3VsdC52YWx1ZSBpcyBjb3JyZWN0XHJcblx0XHRpZiAoaXNWYWxpZEFjY291bnRJZChyZXN1bHQudmFsdWUpKSB7XHJcblx0XHRcdElzVmFsaWRLWUMgPSB0cnVlO1xyXG5cclxuXHRcdFx0dmFyIHVzZXIgPSBNb3JhbGlzLlVzZXIuY3VycmVudCgpO1xyXG5cdFx0XHRpZiAoIXVzZXIuZ2V0KCdhbHBhY2FJZCcpKSB7XHJcblx0XHRcdFx0dXNlci5zYXZlKHthbHBhY2FJZCA6IHJlc3VsdH0pO1xyXG5cdFx0XHRcdGF3YWl0IE1vcmFsaXMuVXNlci5jdXJyZW50KCkuZmV0Y2goKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0Y29uc29sZS5sb2coJ05vdCBLWUMgdmFsaWQnLCBlcnIpO1xyXG5cdH0pO1xyXG5cclxufVxyXG5cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldEtZQ0luZm8oKTogUHJvbWlzZTxhbnk+IHtcclxuXHRpZiAoS1lDSW5mbyAhPSBudWxsKSByZXR1cm4gS1lDSW5mbztcclxuXHJcblx0Y29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi4uL2FiaS9LWUMuanNvblwiKTtcclxuXHRLWUNJbmZvID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cdHJldHVybiBLWUNJbmZvO1xyXG59XHJcblxyXG5pbml0S1lDKCk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/modules/kyc.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("ef3b3ba9310dadac05f8")
/******/ })();
/******/ 
/******/ }
);