"use strict";(self.webpackChunkliminal_app=self.webpackChunkliminal_app||[]).push([["node_modules_web3auth_openlogin-adapter_dist_openloginAdapter_esm_js"],{86094:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "OpenloginAdapter": () => (/* binding */ OpenloginAdapter),\n/* harmony export */   "getOpenloginDefaultOptions": () => (/* binding */ getOpenloginDefaultOptions)\n/* harmony export */ });\n/* harmony import */ var _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3388);\n/* harmony import */ var _web3auth_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(17291);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4942);\n/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72378);\n/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var loglevel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2043);\n/* harmony import */ var loglevel__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(loglevel__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n\nconst getOpenloginDefaultOptions = (chainNamespace, chainId) => {\n  return {\n    adapterSettings: {\n      network: _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__/* .OPENLOGIN_NETWORK.MAINNET */ .dr.MAINNET,\n      clientId: "",\n      uxMode: _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__/* .UX_MODE.POPUP */ .$e.POPUP\n    },\n    chainConfig: chainNamespace ? (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .getChainConfig */ .h2)(chainNamespace, chainId) : undefined,\n    loginSettings: {\n      relogin: true\n    }\n  };\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass OpenloginAdapter extends _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .BaseAdapter */ .J5 {\n  constructor(params) {\n    var _params$chainConfig, _params$chainConfig2, _params$chainConfig3;\n\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "name", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.OPENLOGIN */ .rW.OPENLOGIN);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "adapterNamespace", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_NAMESPACES.MULTICHAIN */ .yk.MULTICHAIN);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "type", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_CATEGORY.IN_APP */ .hN.IN_APP);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "openloginInstance", null);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "status", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.NOT_READY */ .MP.NOT_READY);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "currentChainNamespace", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .CHAIN_NAMESPACES.EIP155 */ .EN.EIP155);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "openloginOptions", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "loginSettings", {});\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this, "privKeyProvider", null);\n\n    loglevel__WEBPACK_IMPORTED_MODULE_3___default().debug("const openlogin adapter", params);\n    const defaultOptions = getOpenloginDefaultOptions((_params$chainConfig = params.chainConfig) === null || _params$chainConfig === void 0 ? void 0 : _params$chainConfig.chainNamespace, (_params$chainConfig2 = params.chainConfig) === null || _params$chainConfig2 === void 0 ? void 0 : _params$chainConfig2.chainId);\n    this.openloginOptions = _objectSpread(_objectSpread({\n      clientId: "",\n      network: _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__/* .OPENLOGIN_NETWORK.MAINNET */ .dr.MAINNET\n    }, defaultOptions.adapterSettings), params.adapterSettings || {});\n    this.loginSettings = _objectSpread(_objectSpread({}, defaultOptions.loginSettings), params.loginSettings); // if no chainNamespace is passed then chain config should be set before calling init\n\n    if ((_params$chainConfig3 = params.chainConfig) !== null && _params$chainConfig3 !== void 0 && _params$chainConfig3.chainNamespace) {\n      var _params$chainConfig4;\n\n      this.currentChainNamespace = (_params$chainConfig4 = params.chainConfig) === null || _params$chainConfig4 === void 0 ? void 0 : _params$chainConfig4.chainNamespace;\n      const defaultChainIdConfig = defaultOptions.chainConfig ? defaultOptions.chainConfig : {};\n      this.chainConfig = _objectSpread(_objectSpread({}, defaultChainIdConfig), params === null || params === void 0 ? void 0 : params.chainConfig);\n      loglevel__WEBPACK_IMPORTED_MODULE_3___default().debug("const openlogin chainConfig", this.chainConfig);\n\n      if (!this.chainConfig.rpcTarget) {\n        throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.invalidParams */ .Ty.invalidParams("rpcTarget is required in chainConfig");\n      }\n    }\n  }\n\n  get chainConfigProxy() {\n    return this.chainConfig ? _objectSpread({}, this.chainConfig) : null;\n  }\n\n  get provider() {\n    var _this$privKeyProvider;\n\n    return ((_this$privKeyProvider = this.privKeyProvider) === null || _this$privKeyProvider === void 0 ? void 0 : _this$privKeyProvider.provider) || null;\n  }\n\n  set provider(_) {\n    throw new Error("Not implemented");\n  }\n\n  async init(options) {\n    var _this$openloginOption;\n\n    super.checkInitializationRequirements();\n    if (!((_this$openloginOption = this.openloginOptions) !== null && _this$openloginOption !== void 0 && _this$openloginOption.clientId)) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.invalidParams */ .Ty.invalidParams("clientId is required before openlogin\'s initialization");\n    if (!this.chainConfig) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.invalidParams */ .Ty.invalidParams("chainConfig is required before initialization");\n    this.openloginInstance = new _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .ZP(this.openloginOptions);\n    const redirectResult = (0,_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__/* .getHashQueryParams */ .Gv)();\n    let isRedirectResult = true;\n\n    if (Object.keys(redirectResult).length > 0 && redirectResult.result) {\n      isRedirectResult = true;\n    }\n\n    await this.openloginInstance.init();\n    this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY;\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.READY */ .n2.READY, _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.OPENLOGIN */ .rW.OPENLOGIN);\n\n    try {\n      // connect only if it is redirect result or if connect (adapter is cached/already connected in same session) is true\n      if (this.openloginInstance.privKey && (options.autoConnect || isRedirectResult)) {\n        await this.connect();\n      }\n    } catch (error) {\n      loglevel__WEBPACK_IMPORTED_MODULE_3___default().error("Failed to connect with cached openlogin provider", error);\n      this.emit("ERRORED", error);\n    }\n  }\n\n  async connect(params) {\n    super.checkConnectionRequirements();\n    this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTING */ .MP.CONNECTING;\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.CONNECTING */ .n2.CONNECTING, _objectSpread(_objectSpread({}, params), {}, {\n      adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.OPENLOGIN */ .rW.OPENLOGIN\n    }));\n\n    try {\n      await this.connectWithProvider(params);\n      return this.provider;\n    } catch (error) {\n      loglevel__WEBPACK_IMPORTED_MODULE_3___default().error("Failed to connect with openlogin provider", error); // ready again to be connected\n\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY;\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, error);\n\n      if (error !== null && error !== void 0 && error.message.includes("user closed popup")) {\n        throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.popupClosed */ .RM.popupClosed();\n      }\n\n      throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.connectionError */ .RM.connectionError("Failed to login with openlogin");\n    }\n  }\n\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    if (this.status !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.notConnectedError */ .RM.notConnectedError("Not connected with wallet");\n    if (!this.openloginInstance) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.notReady */ .Ty.notReady("openloginInstance is not ready");\n    await this.openloginInstance.logout();\n\n    if (options.cleanup) {\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.NOT_READY */ .MP.NOT_READY;\n      this.openloginInstance = null;\n      this.privKeyProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY;\n    }\n\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.DISCONNECTED */ .n2.DISCONNECTED);\n  }\n\n  async getUserInfo() {\n    if (this.status !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.notConnectedError */ .RM.notConnectedError("Not connected with wallet");\n    if (!this.openloginInstance) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.notReady */ .Ty.notReady("openloginInstance is not ready");\n    const userInfo = await this.openloginInstance.getUserInfo();\n    return userInfo;\n  } // should be called only before initialization.\n\n\n  setAdapterSettings(adapterSettings) {\n    if (this.status === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY) return;\n    const defaultOptions = getOpenloginDefaultOptions();\n    this.openloginOptions = _objectSpread(_objectSpread(_objectSpread({}, defaultOptions.adapterSettings), this.openloginOptions || {}), adapterSettings);\n  } // should be called only before initialization.\n\n\n  setChainConfig(customChainConfig) {\n    super.setChainConfig(customChainConfig);\n    this.currentChainNamespace = customChainConfig.chainNamespace;\n  }\n\n  async connectWithProvider(params) {\n    if (!this.chainConfig) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.invalidParams */ .Ty.invalidParams("chainConfig is required before initialization");\n    if (!this.openloginInstance) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.notReady */ .Ty.notReady("openloginInstance is not ready");\n\n    if (this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .CHAIN_NAMESPACES.SOLANA */ .EN.SOLANA) {\n      const {\n        SolanaPrivateKeyProvider\n      } = await Promise.all(/* import() */[__webpack_require__.e("vendors-node_modules_web3auth_base-provider_dist_baseProvider_esm_js"), __webpack_require__.e("vendors-node_modules_toruslabs_tweetnacl-js_nacl-fast_js"), __webpack_require__.e("vendors-node_modules_web3auth_solana-provider_dist_solanaProvider_esm_js"), __webpack_require__.e("_6c05-_0b24-_7e2d-_1ce7-_866b1")]).then(__webpack_require__.bind(__webpack_require__, 44445));\n      this.privKeyProvider = new SolanaPrivateKeyProvider({\n        config: {\n          chainConfig: this.chainConfig\n        }\n      });\n    } else if (this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .CHAIN_NAMESPACES.EIP155 */ .EN.EIP155) {\n      const {\n        EthereumPrivateKeyProvider\n      } = await Promise.all(/* import() */[__webpack_require__.e("vendors-node_modules_web3auth_base-provider_dist_baseProvider_esm_js"), __webpack_require__.e("vendors-node_modules_web3auth_ethereum-provider_dist_ethereumProvider_esm_js"), __webpack_require__.e("_da9b-_96ce-_a993-_7e2d-_2b6a")]).then(__webpack_require__.bind(__webpack_require__, 52062));\n      this.privKeyProvider = new EthereumPrivateKeyProvider({\n        config: {\n          chainConfig: this.chainConfig\n        }\n      });\n    } else {\n      throw new Error("Invalid chainNamespace: ".concat(this.currentChainNamespace, " found while connecting to wallet"));\n    } // if not logged in then login\n\n\n    if (!this.openloginInstance.privKey && params) {\n      await this.openloginInstance.login(lodash_merge__WEBPACK_IMPORTED_MODULE_2___default()(this.loginSettings, {\n        loginProvider: params.loginProvider\n      }, {\n        extraLoginOptions: {\n          login_hint: params === null || params === void 0 ? void 0 : params.login_hint\n        }\n      }));\n    }\n\n    let finalPrivKey = this.openloginInstance.privKey;\n\n    if (finalPrivKey) {\n      if (this.currentChainNamespace === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .CHAIN_NAMESPACES.SOLANA */ .EN.SOLANA) {\n        const {\n          getED25519Key\n        } = await Promise.all(/* import() */[__webpack_require__.e("vendors-node_modules_toruslabs_tweetnacl-js_nacl-fast_js"), __webpack_require__.e("node_modules_toruslabs_openlogin-ed25519_dist_openloginEd25519_esm_js")]).then(__webpack_require__.bind(__webpack_require__, 33946));\n        finalPrivKey = getED25519Key(finalPrivKey).sk.toString("hex");\n      }\n\n      await this.privKeyProvider.setupProvider(finalPrivKey);\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED;\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.CONNECTED */ .n2.CONNECTED, {\n        adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.OPENLOGIN */ .rW.OPENLOGIN,\n        reconnected: !params\n      });\n    }\n  }\n\n}\n\n\n//# sourceMappingURL=openloginAdapter.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///86094\n')}}]);