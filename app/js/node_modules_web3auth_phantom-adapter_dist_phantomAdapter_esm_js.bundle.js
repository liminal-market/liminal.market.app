(self.webpackChunkliminal_app=self.webpackChunkliminal_app||[]).push([["node_modules_web3auth_phantom-adapter_dist_phantomAdapter_esm_js","_6c05-_0b24-_7e2d-_1ce7-_866b0","_6c05-_0b24-_7e2d-_1ce7-_866b1"],{42848:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "PhantomAdapter": () => (/* binding */ PhantomAdapter)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4942);\n/* harmony import */ var _web3auth_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17291);\n/* harmony import */ var _web3auth_solana_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44445);\n/* harmony import */ var loglevel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2043);\n/* harmony import */ var loglevel__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(loglevel__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\nfunction poll(callback, interval, count) {\n  return new Promise((resolve, reject) => {\n    if (count > 0) {\n      setTimeout(async () => {\n        const done = await callback();\n        if (done) resolve(done);\n        if (!done) poll(callback, interval, count - 1).then(res => {\n          resolve(res);\n          return res;\n        }).catch(err => reject(err));\n      }, interval);\n    } else {\n      resolve(false);\n    }\n  });\n}\nconst detectProvider = async function () {\n  var _window$solana;\n\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    interval: 1000,\n    count: 3\n  };\n  const isPhantomAvailable = typeof window !== "undefined" && !!((_window$solana = window.solana) !== null && _window$solana !== void 0 && _window$solana.isPhantom);\n\n  if (isPhantomAvailable) {\n    return window.solana;\n  }\n\n  const isAvailable = await poll(() => {\n    var _window$solana2;\n\n    return (_window$solana2 = window.solana) === null || _window$solana2 === void 0 ? void 0 : _window$solana2.isPhantom;\n  }, options.interval, options.count);\n  if (isAvailable) return window.solana;\n  return null;\n};\n\nclass PhantomAdapter extends _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .BaseAdapter */ .J5 {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this, "name", _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WALLET_ADAPTERS.PHANTOM */ .rW.PHANTOM);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this, "adapterNamespace", _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_NAMESPACES.SOLANA */ .yk.SOLANA);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this, "currentChainNamespace", _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .CHAIN_NAMESPACES.SOLANA */ .EN.SOLANA);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this, "type", _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_CATEGORY.EXTERNAL */ .hN.EXTERNAL);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this, "status", _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_STATUS.NOT_READY */ .MP.NOT_READY);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this, "_wallet", null);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this, "phantomProvider", null);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this, "rehydrated", false);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this, "_onDisconnect", () => {\n      if (this._wallet) {\n        this._wallet.off("disconnect", this._onDisconnect);\n\n        this.rehydrated = false; // ready to be connected again only if it was previously connected and not cleaned up\n\n        this.status = this.status === _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED ? _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_STATUS.READY */ .MP.READY : _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_STATUS.NOT_READY */ .MP.NOT_READY;\n        this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_EVENTS.DISCONNECTED */ .n2.DISCONNECTED);\n      }\n    });\n\n    this.chainConfig = options.chainConfig || null;\n  }\n\n  get isWalletConnected() {\n    var _this$_wallet;\n\n    return !!((_this$_wallet = this._wallet) !== null && _this$_wallet !== void 0 && _this$_wallet.isConnected && this.status === _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED);\n  }\n\n  get provider() {\n    var _this$phantomProvider;\n\n    return ((_this$phantomProvider = this.phantomProvider) === null || _this$phantomProvider === void 0 ? void 0 : _this$phantomProvider.provider) || null;\n  }\n\n  set provider(_) {\n    throw new Error("Not implemented");\n  }\n\n  setAdapterSettings(_) {}\n\n  async init(options) {\n    super.checkInitializationRequirements(); // set chainConfig for mainnet by default if not set\n\n    if (!this.chainConfig) {\n      this.chainConfig = (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .getChainConfig */ .h2)(_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .CHAIN_NAMESPACES.SOLANA */ .EN.SOLANA, "0x1");\n    }\n\n    this._wallet = await detectProvider({\n      interval: 500,\n      count: 3\n    });\n    if (!this._wallet) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WalletInitializationError.notInstalled */ .Ty.notInstalled();\n    this.phantomProvider = new _web3auth_solana_provider__WEBPACK_IMPORTED_MODULE_1__.PhantomInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig\n      }\n    });\n    this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_STATUS.READY */ .MP.READY;\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_EVENTS.READY */ .n2.READY, _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WALLET_ADAPTERS.PHANTOM */ .rW.PHANTOM);\n\n    try {\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      loglevel__WEBPACK_IMPORTED_MODULE_2___default().error("Failed to connect with cached phantom provider", error);\n      this.emit("ERRORED", error);\n    }\n  }\n\n  async connect() {\n    var _this = this;\n\n    try {\n      super.checkConnectionRequirements();\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_STATUS.CONNECTING */ .MP.CONNECTING;\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_EVENTS.CONNECTING */ .n2.CONNECTING, {\n        adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WALLET_ADAPTERS.PHANTOM */ .rW.PHANTOM\n      });\n      if (!this._wallet) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WalletInitializationError.notInstalled */ .Ty.notInstalled();\n\n      if (!this._wallet.isConnected) {\n        const handleDisconnect = this._wallet._handleDisconnect;\n\n        try {\n          await new Promise((resolve, reject) => {\n            const connect = async () => {\n              await this.connectWithProvider(this._wallet);\n              resolve(this.provider);\n            };\n\n            if (!this._wallet) return reject(_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WalletInitializationError.notInstalled */ .Ty.notInstalled());\n\n            this._wallet.once("connect", connect); // Raise an issue on phantom that if window is closed, disconnect event is not fired\n\n\n            this._wallet._handleDisconnect = function () {\n              reject(_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WalletInitializationError.windowClosed */ .Ty.windowClosed());\n\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n\n              return handleDisconnect.apply(_this._wallet, args);\n            };\n\n            this._wallet.connect().catch(reason => {\n              reject(reason);\n            });\n          });\n        } catch (error) {\n          if (error instanceof _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .Web3AuthError */ .up) throw error;\n          throw _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WalletLoginError.connectionError */ .RM.connectionError(error === null || error === void 0 ? void 0 : error.message);\n        } finally {\n          this._wallet._handleDisconnect = handleDisconnect;\n        }\n      } else {\n        await this.connectWithProvider(this._wallet);\n      }\n\n      if (!this._wallet.publicKey) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WalletLoginError.connectionError */ .RM.connectionError();\n\n      this._wallet.on("disconnect", this._onDisconnect);\n\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_STATUS.READY */ .MP.READY;\n      this.rehydrated = false;\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    if (!this.isWalletConnected) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WalletLoginError.notConnectedError */ .RM.notConnectedError("Not connected with wallet");\n\n    try {\n      var _this$_wallet2;\n\n      await ((_this$_wallet2 = this._wallet) === null || _this$_wallet2 === void 0 ? void 0 : _this$_wallet2.disconnect());\n\n      if (options.cleanup) {\n        this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_STATUS.NOT_READY */ .MP.NOT_READY;\n        this.phantomProvider = null;\n        this._wallet = null;\n      }\n\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_EVENTS.DISCONNECTED */ .n2.DISCONNECTED);\n    } catch (error) {\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WalletLoginError.disconnectionError */ .RM.disconnectionError(error === null || error === void 0 ? void 0 : error.message));\n    }\n  }\n\n  async getUserInfo() {\n    if (!this.isWalletConnected) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WalletLoginError.notConnectedError */ .RM.notConnectedError("Not connected with wallet, Please login/connect first");\n    return {};\n  }\n\n  async connectWithProvider(injectedProvider) {\n    if (!this.phantomProvider) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WalletLoginError.connectionError */ .RM.connectionError("No phantom provider");\n    await this.phantomProvider.setupProvider(injectedProvider);\n    this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED;\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .ADAPTER_EVENTS.CONNECTED */ .n2.CONNECTED, {\n      adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_0__/* .WALLET_ADAPTERS.PHANTOM */ .rW.PHANTOM,\n      reconnected: this.rehydrated\n    });\n    return this.provider;\n  }\n\n}\n\n\n//# sourceMappingURL=phantomAdapter.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42848\n')},11922:()=>{},22399:()=>{},64123:()=>{},78848:()=>{},71456:()=>{}}]);