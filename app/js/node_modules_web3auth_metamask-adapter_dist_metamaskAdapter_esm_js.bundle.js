"use strict";(self.webpackChunkliminal_app=self.webpackChunkliminal_app||[]).push([["node_modules_web3auth_metamask-adapter_dist_metamaskAdapter_esm_js"],{94429:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "MetamaskAdapter": () => (/* binding */ MetamaskAdapter)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4942);\n/* harmony import */ var _metamask_detect_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92003);\n/* harmony import */ var _metamask_detect_provider__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_metamask_detect_provider__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _web3auth_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(17291);\n\n\n\n\nclass MetamaskAdapter extends _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .BaseAdapter */ .J5 {\n  constructor() {\n    let adapterOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this, "adapterNamespace", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_NAMESPACES.EIP155 */ .yk.EIP155);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this, "currentChainNamespace", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .CHAIN_NAMESPACES.EIP155 */ .EN.EIP155);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this, "type", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_CATEGORY.EXTERNAL */ .hN.EXTERNAL);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this, "name", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.METAMASK */ .rW.METAMASK);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this, "status", _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.NOT_READY */ .MP.NOT_READY);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this, "rehydrated", false);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this, "metamaskProvider", null);\n\n    this.chainConfig = adapterOptions.chainConfig || null;\n  }\n\n  get provider() {\n    if (this.status === _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED && this.metamaskProvider) {\n      return this.metamaskProvider;\n    }\n\n    return null;\n  }\n\n  set provider(_) {\n    throw new Error("Not implemented");\n  }\n\n  async init(options) {\n    super.checkInitializationRequirements();\n    this.metamaskProvider = await _metamask_detect_provider__WEBPACK_IMPORTED_MODULE_0___default()({\n      mustBeMetaMask: true\n    });\n    if (!this.metamaskProvider) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletInitializationError.notInstalled */ .Ty.notInstalled("Metamask extension is not installed");\n    this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY;\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.READY */ .n2.READY, _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.METAMASK */ .rW.METAMASK);\n\n    try {\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, error);\n    }\n  }\n\n  setAdapterSettings(_) {}\n\n  async connect() {\n    super.checkConnectionRequirements(); // set default to mainnet\n\n    if (!this.chainConfig) this.chainConfig = (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .getChainConfig */ .h2)(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .CHAIN_NAMESPACES.EIP155 */ .EN.EIP155, 1);\n    this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTING */ .MP.CONNECTING;\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.CONNECTING */ .n2.CONNECTING, {\n      adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.METAMASK */ .rW.METAMASK\n    });\n    if (!this.metamaskProvider) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.notConnectedError */ .RM.notConnectedError("Not able to connect with metamask");\n\n    try {\n      await this.metamaskProvider.request({\n        method: "eth_requestAccounts"\n      });\n      const {\n        chainId\n      } = this.metamaskProvider;\n\n      if (chainId !== this.chainConfig.chainId) {\n        await this.switchChain(this.chainConfig);\n      }\n\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED;\n      if (!this.provider) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.notConnectedError */ .RM.notConnectedError("Failed to connect with provider");\n      this.provider.once("disconnect", () => {\n        // ready to be connected again\n        this.disconnect();\n      });\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.CONNECTED */ .n2.CONNECTED, {\n        adapter: _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WALLET_ADAPTERS.METAMASK */ .rW.METAMASK,\n        reconnected: this.rehydrated\n      });\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY;\n      this.rehydrated = false;\n      this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.ERRORED */ .n2.ERRORED, error);\n      throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.connectionError */ .RM.connectionError("Failed to login with metamask wallet");\n    }\n  }\n\n  async disconnect() {\n    var _this$provider;\n\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    if (this.status !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.disconnectionError */ .RM.disconnectionError("Not connected with wallet");\n    (_this$provider = this.provider) === null || _this$provider === void 0 ? void 0 : _this$provider.removeAllListeners();\n\n    if (options.cleanup) {\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.NOT_READY */ .MP.NOT_READY;\n      this.metamaskProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.READY */ .MP.READY;\n    }\n\n    this.rehydrated = false;\n    this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_EVENTS.DISCONNECTED */ .n2.DISCONNECTED);\n  }\n\n  async getUserInfo() {\n    if (this.status !== _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .ADAPTER_STATUS.CONNECTED */ .MP.CONNECTED) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.notConnectedError */ .RM.notConnectedError("Not connected with wallet, Please login/connect first");\n    return {};\n  }\n\n  async switchChain(chainConfig) {\n    if (!this.metamaskProvider) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__/* .WalletLoginError.notConnectedError */ .RM.notConnectedError("Not connected with wallet");\n\n    try {\n      await this.metamaskProvider.request({\n        method: "wallet_switchEthereumChain",\n        params: [{\n          chainId: chainConfig.chainId\n        }]\n      });\n    } catch (switchError) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if (switchError.code === 4902) {\n        await this.metamaskProvider.request({\n          method: "wallet_addEthereumChain",\n          params: [{\n            chainId: chainConfig.chainId,\n            chainName: chainConfig.displayName,\n            rpcUrls: [chainConfig.rpcTarget]\n          }]\n        });\n      } else {\n        throw switchError;\n      }\n    }\n  }\n\n}\n\n\n//# sourceMappingURL=metamaskAdapter.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///94429\n')}}]);